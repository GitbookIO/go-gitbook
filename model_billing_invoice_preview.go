/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the BillingInvoicePreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingInvoicePreview{}

// BillingInvoicePreview struct for BillingInvoicePreview
type BillingInvoicePreview struct {
	// Amount of the invoice
	Amount float32 `json:"amount"`
	// Amount that will be immediately charged.
	AmountDueToday float32 `json:"amountDueToday"`
	// Current balance, if any, being stored on the customer. If positive, the customer has credit to apply to their next invoice.
	CustomerBalance float32 `json:"customerBalance"`
	// Current balance after potential upgrade.
	RemainingCustomerBalance float32 `json:"remainingCustomerBalance"`
	// Details of the change happening on the subscription.
	Lines []BillingInvoicePreviewLinesInner `json:"lines"`
}

// NewBillingInvoicePreview instantiates a new BillingInvoicePreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingInvoicePreview(amount float32, amountDueToday float32, customerBalance float32, remainingCustomerBalance float32, lines []BillingInvoicePreviewLinesInner) *BillingInvoicePreview {
	this := BillingInvoicePreview{}
	this.Amount = amount
	this.AmountDueToday = amountDueToday
	this.CustomerBalance = customerBalance
	this.RemainingCustomerBalance = remainingCustomerBalance
	this.Lines = lines
	return &this
}

// NewBillingInvoicePreviewWithDefaults instantiates a new BillingInvoicePreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingInvoicePreviewWithDefaults() *BillingInvoicePreview {
	this := BillingInvoicePreview{}
	return &this
}

// GetAmount returns the Amount field value
func (o *BillingInvoicePreview) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *BillingInvoicePreview) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *BillingInvoicePreview) SetAmount(v float32) {
	o.Amount = v
}

// GetAmountDueToday returns the AmountDueToday field value
func (o *BillingInvoicePreview) GetAmountDueToday() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AmountDueToday
}

// GetAmountDueTodayOk returns a tuple with the AmountDueToday field value
// and a boolean to check if the value has been set.
func (o *BillingInvoicePreview) GetAmountDueTodayOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountDueToday, true
}

// SetAmountDueToday sets field value
func (o *BillingInvoicePreview) SetAmountDueToday(v float32) {
	o.AmountDueToday = v
}

// GetCustomerBalance returns the CustomerBalance field value
func (o *BillingInvoicePreview) GetCustomerBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CustomerBalance
}

// GetCustomerBalanceOk returns a tuple with the CustomerBalance field value
// and a boolean to check if the value has been set.
func (o *BillingInvoicePreview) GetCustomerBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerBalance, true
}

// SetCustomerBalance sets field value
func (o *BillingInvoicePreview) SetCustomerBalance(v float32) {
	o.CustomerBalance = v
}

// GetRemainingCustomerBalance returns the RemainingCustomerBalance field value
func (o *BillingInvoicePreview) GetRemainingCustomerBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RemainingCustomerBalance
}

// GetRemainingCustomerBalanceOk returns a tuple with the RemainingCustomerBalance field value
// and a boolean to check if the value has been set.
func (o *BillingInvoicePreview) GetRemainingCustomerBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingCustomerBalance, true
}

// SetRemainingCustomerBalance sets field value
func (o *BillingInvoicePreview) SetRemainingCustomerBalance(v float32) {
	o.RemainingCustomerBalance = v
}

// GetLines returns the Lines field value
func (o *BillingInvoicePreview) GetLines() []BillingInvoicePreviewLinesInner {
	if o == nil {
		var ret []BillingInvoicePreviewLinesInner
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *BillingInvoicePreview) GetLinesOk() ([]BillingInvoicePreviewLinesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *BillingInvoicePreview) SetLines(v []BillingInvoicePreviewLinesInner) {
	o.Lines = v
}

func (o BillingInvoicePreview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingInvoicePreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["amountDueToday"] = o.AmountDueToday
	toSerialize["customerBalance"] = o.CustomerBalance
	toSerialize["remainingCustomerBalance"] = o.RemainingCustomerBalance
	toSerialize["lines"] = o.Lines
	return toSerialize, nil
}

type NullableBillingInvoicePreview struct {
	value *BillingInvoicePreview
	isSet bool
}

func (v NullableBillingInvoicePreview) Get() *BillingInvoicePreview {
	return v.value
}

func (v *NullableBillingInvoicePreview) Set(val *BillingInvoicePreview) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingInvoicePreview) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingInvoicePreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingInvoicePreview(val *BillingInvoicePreview) *NullableBillingInvoicePreview {
	return &NullableBillingInvoicePreview{value: val, isSet: true}
}

func (v NullableBillingInvoicePreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingInvoicePreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
