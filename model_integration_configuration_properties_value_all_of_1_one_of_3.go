/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationConfigurationPropertiesValueAllOf1OneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationConfigurationPropertiesValueAllOf1OneOf3{}

// IntegrationConfigurationPropertiesValueAllOf1OneOf3 struct for IntegrationConfigurationPropertiesValueAllOf1OneOf3
type IntegrationConfigurationPropertiesValueAllOf1OneOf3 struct {
	Type        string `json:"type"`
	CallbackUrl string `json:"callback_url"`
	ButtonText  string `json:"button_text"`
}

// NewIntegrationConfigurationPropertiesValueAllOf1OneOf3 instantiates a new IntegrationConfigurationPropertiesValueAllOf1OneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationConfigurationPropertiesValueAllOf1OneOf3(type_ string, callbackUrl string, buttonText string) *IntegrationConfigurationPropertiesValueAllOf1OneOf3 {
	this := IntegrationConfigurationPropertiesValueAllOf1OneOf3{}
	this.Type = type_
	this.CallbackUrl = callbackUrl
	this.ButtonText = buttonText
	return &this
}

// NewIntegrationConfigurationPropertiesValueAllOf1OneOf3WithDefaults instantiates a new IntegrationConfigurationPropertiesValueAllOf1OneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationConfigurationPropertiesValueAllOf1OneOf3WithDefaults() *IntegrationConfigurationPropertiesValueAllOf1OneOf3 {
	this := IntegrationConfigurationPropertiesValueAllOf1OneOf3{}
	return &this
}

// GetType returns the Type field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) SetType(v string) {
	o.Type = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetButtonText returns the ButtonText field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetButtonText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ButtonText
}

// GetButtonTextOk returns a tuple with the ButtonText field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) GetButtonTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ButtonText, true
}

// SetButtonText sets field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf3) SetButtonText(v string) {
	o.ButtonText = v
}

func (o IntegrationConfigurationPropertiesValueAllOf1OneOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationConfigurationPropertiesValueAllOf1OneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["callback_url"] = o.CallbackUrl
	toSerialize["button_text"] = o.ButtonText
	return toSerialize, nil
}

type NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3 struct {
	value *IntegrationConfigurationPropertiesValueAllOf1OneOf3
	isSet bool
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) Get() *IntegrationConfigurationPropertiesValueAllOf1OneOf3 {
	return v.value
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) Set(val *IntegrationConfigurationPropertiesValueAllOf1OneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationConfigurationPropertiesValueAllOf1OneOf3(val *IntegrationConfigurationPropertiesValueAllOf1OneOf3) *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3 {
	return &NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3{value: val, isSet: true}
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
