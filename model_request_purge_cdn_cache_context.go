/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestPurgeCDNCacheContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestPurgeCDNCacheContext{}

// RequestPurgeCDNCacheContext The context to send when purging the CDN Cache
type RequestPurgeCDNCacheContext struct {
	Type PurgeCDNCacheContextType `json:"type"`
	// The list of tags or hosts to purge
	Values []string `json:"values"`
}

// NewRequestPurgeCDNCacheContext instantiates a new RequestPurgeCDNCacheContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestPurgeCDNCacheContext(type_ PurgeCDNCacheContextType, values []string) *RequestPurgeCDNCacheContext {
	this := RequestPurgeCDNCacheContext{}
	this.Type = type_
	this.Values = values
	return &this
}

// NewRequestPurgeCDNCacheContextWithDefaults instantiates a new RequestPurgeCDNCacheContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestPurgeCDNCacheContextWithDefaults() *RequestPurgeCDNCacheContext {
	this := RequestPurgeCDNCacheContext{}
	return &this
}

// GetType returns the Type field value
func (o *RequestPurgeCDNCacheContext) GetType() PurgeCDNCacheContextType {
	if o == nil {
		var ret PurgeCDNCacheContextType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequestPurgeCDNCacheContext) GetTypeOk() (*PurgeCDNCacheContextType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequestPurgeCDNCacheContext) SetType(v PurgeCDNCacheContextType) {
	o.Type = v
}

// GetValues returns the Values field value
func (o *RequestPurgeCDNCacheContext) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *RequestPurgeCDNCacheContext) GetValuesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *RequestPurgeCDNCacheContext) SetValues(v []string) {
	o.Values = v
}

func (o RequestPurgeCDNCacheContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestPurgeCDNCacheContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

type NullableRequestPurgeCDNCacheContext struct {
	value *RequestPurgeCDNCacheContext
	isSet bool
}

func (v NullableRequestPurgeCDNCacheContext) Get() *RequestPurgeCDNCacheContext {
	return v.value
}

func (v *NullableRequestPurgeCDNCacheContext) Set(val *RequestPurgeCDNCacheContext) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestPurgeCDNCacheContext) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestPurgeCDNCacheContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestPurgeCDNCacheContext(val *RequestPurgeCDNCacheContext) *NullableRequestPurgeCDNCacheContext {
	return &NullableRequestPurgeCDNCacheContext{value: val, isSet: true}
}

func (v NullableRequestPurgeCDNCacheContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestPurgeCDNCacheContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
