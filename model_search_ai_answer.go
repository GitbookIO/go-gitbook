/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SearchAIAnswer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchAIAnswer{}

// SearchAIAnswer Answer from AI for a question asked on a content.
type SearchAIAnswer struct {
	Text              string                     `json:"text"`
	FollowupQuestions []string                   `json:"followupQuestions"`
	Pages             []SearchAIAnswerPagesInner `json:"pages"`
}

// NewSearchAIAnswer instantiates a new SearchAIAnswer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchAIAnswer(text string, followupQuestions []string, pages []SearchAIAnswerPagesInner) *SearchAIAnswer {
	this := SearchAIAnswer{}
	this.Text = text
	this.FollowupQuestions = followupQuestions
	this.Pages = pages
	return &this
}

// NewSearchAIAnswerWithDefaults instantiates a new SearchAIAnswer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchAIAnswerWithDefaults() *SearchAIAnswer {
	this := SearchAIAnswer{}
	return &this
}

// GetText returns the Text field value
func (o *SearchAIAnswer) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *SearchAIAnswer) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *SearchAIAnswer) SetText(v string) {
	o.Text = v
}

// GetFollowupQuestions returns the FollowupQuestions field value
func (o *SearchAIAnswer) GetFollowupQuestions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.FollowupQuestions
}

// GetFollowupQuestionsOk returns a tuple with the FollowupQuestions field value
// and a boolean to check if the value has been set.
func (o *SearchAIAnswer) GetFollowupQuestionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FollowupQuestions, true
}

// SetFollowupQuestions sets field value
func (o *SearchAIAnswer) SetFollowupQuestions(v []string) {
	o.FollowupQuestions = v
}

// GetPages returns the Pages field value
func (o *SearchAIAnswer) GetPages() []SearchAIAnswerPagesInner {
	if o == nil {
		var ret []SearchAIAnswerPagesInner
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *SearchAIAnswer) GetPagesOk() ([]SearchAIAnswerPagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *SearchAIAnswer) SetPages(v []SearchAIAnswerPagesInner) {
	o.Pages = v
}

func (o SearchAIAnswer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchAIAnswer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["text"] = o.Text
	toSerialize["followupQuestions"] = o.FollowupQuestions
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

type NullableSearchAIAnswer struct {
	value *SearchAIAnswer
	isSet bool
}

func (v NullableSearchAIAnswer) Get() *SearchAIAnswer {
	return v.value
}

func (v *NullableSearchAIAnswer) Set(val *SearchAIAnswer) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchAIAnswer) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchAIAnswer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchAIAnswer(val *SearchAIAnswer) *NullableSearchAIAnswer {
	return &NullableSearchAIAnswer{value: val, isSet: true}
}

func (v NullableSearchAIAnswer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchAIAnswer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
