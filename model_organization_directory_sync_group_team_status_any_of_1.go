/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the OrganizationDirectorySyncGroupTeamStatusAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationDirectorySyncGroupTeamStatusAnyOf1{}

// OrganizationDirectorySyncGroupTeamStatusAnyOf1 struct for OrganizationDirectorySyncGroupTeamStatusAnyOf1
type OrganizationDirectorySyncGroupTeamStatusAnyOf1 struct {
	Success bool   `json:"success"`
	Error   string `json:"error"`
}

// NewOrganizationDirectorySyncGroupTeamStatusAnyOf1 instantiates a new OrganizationDirectorySyncGroupTeamStatusAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationDirectorySyncGroupTeamStatusAnyOf1(success bool, error_ string) *OrganizationDirectorySyncGroupTeamStatusAnyOf1 {
	this := OrganizationDirectorySyncGroupTeamStatusAnyOf1{}
	this.Success = success
	this.Error = error_
	return &this
}

// NewOrganizationDirectorySyncGroupTeamStatusAnyOf1WithDefaults instantiates a new OrganizationDirectorySyncGroupTeamStatusAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationDirectorySyncGroupTeamStatusAnyOf1WithDefaults() *OrganizationDirectorySyncGroupTeamStatusAnyOf1 {
	this := OrganizationDirectorySyncGroupTeamStatusAnyOf1{}
	return &this
}

// GetSuccess returns the Success field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) SetSuccess(v bool) {
	o.Success = v
}

// GetError returns the Error field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf1) SetError(v string) {
	o.Error = v
}

func (o OrganizationDirectorySyncGroupTeamStatusAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationDirectorySyncGroupTeamStatusAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1 struct {
	value *OrganizationDirectorySyncGroupTeamStatusAnyOf1
	isSet bool
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) Get() *OrganizationDirectorySyncGroupTeamStatusAnyOf1 {
	return v.value
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) Set(val *OrganizationDirectorySyncGroupTeamStatusAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationDirectorySyncGroupTeamStatusAnyOf1(val *OrganizationDirectorySyncGroupTeamStatusAnyOf1) *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1 {
	return &NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1{value: val, isSet: true}
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
