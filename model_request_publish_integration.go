/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestPublishIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestPublishIntegration{}

// RequestPublishIntegration struct for RequestPublishIntegration
type RequestPublishIntegration struct {
	// Base64 content of the icon
	Icon *string `json:"icon,omitempty"`
	// Title of the integration
	Title string `json:"title"`
	// Description of the integration
	Description string `json:"description"`
	// Long form markdown summary of the integration
	Summary       *string                `json:"summary,omitempty"`
	PreviewImages []string               `json:"previewImages,omitempty"`
	Visibility    *IntegrationVisibility `json:"visibility,omitempty"`
	// Permissions that should be granted to the integration
	Scopes []IntegrationScope `json:"scopes"`
	// Categories for which the integration is listed in the marketplace
	Categories []IntegrationCategory `json:"categories,omitempty"`
	// Custom blocks defined by this integration.
	Blocks []IntegrationBlock `json:"blocks,omitempty"`
	// External urls configured by the developer of the integration
	ExternalLinks  []IntegrationExternalLinksInner `json:"externalLinks,omitempty"`
	Configurations *IntegrationConfigurations      `json:"configurations,omitempty"`
	// Content of the script to use
	Script string `json:"script"`
	// The ID or subdomain of the organization under which the integration should be published
	Organization *string `json:"organization,omitempty"`
	// Secrets stored on the integration and passed at runtime.
	Secrets               *map[string]string                `json:"secrets,omitempty"`
	ContentSecurityPolicy *IntegrationContentSecurityPolicy `json:"contentSecurityPolicy,omitempty"`
}

// NewRequestPublishIntegration instantiates a new RequestPublishIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestPublishIntegration(title string, description string, scopes []IntegrationScope, script string) *RequestPublishIntegration {
	this := RequestPublishIntegration{}
	this.Title = title
	this.Description = description
	this.Scopes = scopes
	this.Script = script
	return &this
}

// NewRequestPublishIntegrationWithDefaults instantiates a new RequestPublishIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestPublishIntegrationWithDefaults() *RequestPublishIntegration {
	this := RequestPublishIntegration{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *RequestPublishIntegration) SetIcon(v string) {
	o.Icon = &v
}

// GetTitle returns the Title field value
func (o *RequestPublishIntegration) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RequestPublishIntegration) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
func (o *RequestPublishIntegration) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RequestPublishIntegration) SetDescription(v string) {
	o.Description = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *RequestPublishIntegration) SetSummary(v string) {
	o.Summary = &v
}

// GetPreviewImages returns the PreviewImages field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetPreviewImages() []string {
	if o == nil || IsNil(o.PreviewImages) {
		var ret []string
		return ret
	}
	return o.PreviewImages
}

// GetPreviewImagesOk returns a tuple with the PreviewImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetPreviewImagesOk() ([]string, bool) {
	if o == nil || IsNil(o.PreviewImages) {
		return nil, false
	}
	return o.PreviewImages, true
}

// HasPreviewImages returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasPreviewImages() bool {
	if o != nil && !IsNil(o.PreviewImages) {
		return true
	}

	return false
}

// SetPreviewImages gets a reference to the given []string and assigns it to the PreviewImages field.
func (o *RequestPublishIntegration) SetPreviewImages(v []string) {
	o.PreviewImages = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetVisibility() IntegrationVisibility {
	if o == nil || IsNil(o.Visibility) {
		var ret IntegrationVisibility
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetVisibilityOk() (*IntegrationVisibility, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given IntegrationVisibility and assigns it to the Visibility field.
func (o *RequestPublishIntegration) SetVisibility(v IntegrationVisibility) {
	o.Visibility = &v
}

// GetScopes returns the Scopes field value
func (o *RequestPublishIntegration) GetScopes() []IntegrationScope {
	if o == nil {
		var ret []IntegrationScope
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetScopesOk() ([]IntegrationScope, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *RequestPublishIntegration) SetScopes(v []IntegrationScope) {
	o.Scopes = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetCategories() []IntegrationCategory {
	if o == nil || IsNil(o.Categories) {
		var ret []IntegrationCategory
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetCategoriesOk() ([]IntegrationCategory, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []IntegrationCategory and assigns it to the Categories field.
func (o *RequestPublishIntegration) SetCategories(v []IntegrationCategory) {
	o.Categories = v
}

// GetBlocks returns the Blocks field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetBlocks() []IntegrationBlock {
	if o == nil || IsNil(o.Blocks) {
		var ret []IntegrationBlock
		return ret
	}
	return o.Blocks
}

// GetBlocksOk returns a tuple with the Blocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetBlocksOk() ([]IntegrationBlock, bool) {
	if o == nil || IsNil(o.Blocks) {
		return nil, false
	}
	return o.Blocks, true
}

// HasBlocks returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasBlocks() bool {
	if o != nil && !IsNil(o.Blocks) {
		return true
	}

	return false
}

// SetBlocks gets a reference to the given []IntegrationBlock and assigns it to the Blocks field.
func (o *RequestPublishIntegration) SetBlocks(v []IntegrationBlock) {
	o.Blocks = v
}

// GetExternalLinks returns the ExternalLinks field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetExternalLinks() []IntegrationExternalLinksInner {
	if o == nil || IsNil(o.ExternalLinks) {
		var ret []IntegrationExternalLinksInner
		return ret
	}
	return o.ExternalLinks
}

// GetExternalLinksOk returns a tuple with the ExternalLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetExternalLinksOk() ([]IntegrationExternalLinksInner, bool) {
	if o == nil || IsNil(o.ExternalLinks) {
		return nil, false
	}
	return o.ExternalLinks, true
}

// HasExternalLinks returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasExternalLinks() bool {
	if o != nil && !IsNil(o.ExternalLinks) {
		return true
	}

	return false
}

// SetExternalLinks gets a reference to the given []IntegrationExternalLinksInner and assigns it to the ExternalLinks field.
func (o *RequestPublishIntegration) SetExternalLinks(v []IntegrationExternalLinksInner) {
	o.ExternalLinks = v
}

// GetConfigurations returns the Configurations field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetConfigurations() IntegrationConfigurations {
	if o == nil || IsNil(o.Configurations) {
		var ret IntegrationConfigurations
		return ret
	}
	return *o.Configurations
}

// GetConfigurationsOk returns a tuple with the Configurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetConfigurationsOk() (*IntegrationConfigurations, bool) {
	if o == nil || IsNil(o.Configurations) {
		return nil, false
	}
	return o.Configurations, true
}

// HasConfigurations returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasConfigurations() bool {
	if o != nil && !IsNil(o.Configurations) {
		return true
	}

	return false
}

// SetConfigurations gets a reference to the given IntegrationConfigurations and assigns it to the Configurations field.
func (o *RequestPublishIntegration) SetConfigurations(v IntegrationConfigurations) {
	o.Configurations = &v
}

// GetScript returns the Script field value
func (o *RequestPublishIntegration) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *RequestPublishIntegration) SetScript(v string) {
	o.Script = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *RequestPublishIntegration) SetOrganization(v string) {
	o.Organization = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetSecrets() map[string]string {
	if o == nil || IsNil(o.Secrets) {
		var ret map[string]string
		return ret
	}
	return *o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetSecretsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given map[string]string and assigns it to the Secrets field.
func (o *RequestPublishIntegration) SetSecrets(v map[string]string) {
	o.Secrets = &v
}

// GetContentSecurityPolicy returns the ContentSecurityPolicy field value if set, zero value otherwise.
func (o *RequestPublishIntegration) GetContentSecurityPolicy() IntegrationContentSecurityPolicy {
	if o == nil || IsNil(o.ContentSecurityPolicy) {
		var ret IntegrationContentSecurityPolicy
		return ret
	}
	return *o.ContentSecurityPolicy
}

// GetContentSecurityPolicyOk returns a tuple with the ContentSecurityPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestPublishIntegration) GetContentSecurityPolicyOk() (*IntegrationContentSecurityPolicy, bool) {
	if o == nil || IsNil(o.ContentSecurityPolicy) {
		return nil, false
	}
	return o.ContentSecurityPolicy, true
}

// HasContentSecurityPolicy returns a boolean if a field has been set.
func (o *RequestPublishIntegration) HasContentSecurityPolicy() bool {
	if o != nil && !IsNil(o.ContentSecurityPolicy) {
		return true
	}

	return false
}

// SetContentSecurityPolicy gets a reference to the given IntegrationContentSecurityPolicy and assigns it to the ContentSecurityPolicy field.
func (o *RequestPublishIntegration) SetContentSecurityPolicy(v IntegrationContentSecurityPolicy) {
	o.ContentSecurityPolicy = &v
}

func (o RequestPublishIntegration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestPublishIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	toSerialize["title"] = o.Title
	toSerialize["description"] = o.Description
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.PreviewImages) {
		toSerialize["previewImages"] = o.PreviewImages
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	toSerialize["scopes"] = o.Scopes
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Blocks) {
		toSerialize["blocks"] = o.Blocks
	}
	if !IsNil(o.ExternalLinks) {
		toSerialize["externalLinks"] = o.ExternalLinks
	}
	if !IsNil(o.Configurations) {
		toSerialize["configurations"] = o.Configurations
	}
	toSerialize["script"] = o.Script
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.ContentSecurityPolicy) {
		toSerialize["contentSecurityPolicy"] = o.ContentSecurityPolicy
	}
	return toSerialize, nil
}

type NullableRequestPublishIntegration struct {
	value *RequestPublishIntegration
	isSet bool
}

func (v NullableRequestPublishIntegration) Get() *RequestPublishIntegration {
	return v.value
}

func (v *NullableRequestPublishIntegration) Set(val *RequestPublishIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestPublishIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestPublishIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestPublishIntegration(val *RequestPublishIntegration) *NullableRequestPublishIntegration {
	return &NullableRequestPublishIntegration{value: val, isSet: true}
}

func (v NullableRequestPublishIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestPublishIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
