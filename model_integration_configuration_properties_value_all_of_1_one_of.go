/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationConfigurationPropertiesValueAllOf1OneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationConfigurationPropertiesValueAllOf1OneOf{}

// IntegrationConfigurationPropertiesValueAllOf1OneOf struct for IntegrationConfigurationPropertiesValueAllOf1OneOf
type IntegrationConfigurationPropertiesValueAllOf1OneOf struct {
	Type    string  `json:"type"`
	Default *string `json:"default,omitempty"`
}

// NewIntegrationConfigurationPropertiesValueAllOf1OneOf instantiates a new IntegrationConfigurationPropertiesValueAllOf1OneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationConfigurationPropertiesValueAllOf1OneOf(type_ string) *IntegrationConfigurationPropertiesValueAllOf1OneOf {
	this := IntegrationConfigurationPropertiesValueAllOf1OneOf{}
	this.Type = type_
	return &this
}

// NewIntegrationConfigurationPropertiesValueAllOf1OneOfWithDefaults instantiates a new IntegrationConfigurationPropertiesValueAllOf1OneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationConfigurationPropertiesValueAllOf1OneOfWithDefaults() *IntegrationConfigurationPropertiesValueAllOf1OneOf {
	this := IntegrationConfigurationPropertiesValueAllOf1OneOf{}
	return &this
}

// GetType returns the Type field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) SetType(v string) {
	o.Type = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) GetDefault() string {
	if o == nil || IsNil(o.Default) {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) GetDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *IntegrationConfigurationPropertiesValueAllOf1OneOf) SetDefault(v string) {
	o.Default = &v
}

func (o IntegrationConfigurationPropertiesValueAllOf1OneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationConfigurationPropertiesValueAllOf1OneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	return toSerialize, nil
}

type NullableIntegrationConfigurationPropertiesValueAllOf1OneOf struct {
	value *IntegrationConfigurationPropertiesValueAllOf1OneOf
	isSet bool
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) Get() *IntegrationConfigurationPropertiesValueAllOf1OneOf {
	return v.value
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) Set(val *IntegrationConfigurationPropertiesValueAllOf1OneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationConfigurationPropertiesValueAllOf1OneOf(val *IntegrationConfigurationPropertiesValueAllOf1OneOf) *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf {
	return &NullableIntegrationConfigurationPropertiesValueAllOf1OneOf{value: val, isSet: true}
}

func (v NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationConfigurationPropertiesValueAllOf1OneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
