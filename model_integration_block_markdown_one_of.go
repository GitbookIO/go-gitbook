/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationBlockMarkdownOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationBlockMarkdownOneOf{}

// IntegrationBlockMarkdownOneOf Format the custom block as a codeblock
type IntegrationBlockMarkdownOneOf struct {
	// Code block syntax to use to identify the block.
	Codeblock string `json:"codeblock"`
	// Key of the property to use as body of the codeblock.
	Body string `json:"body"`
}

// NewIntegrationBlockMarkdownOneOf instantiates a new IntegrationBlockMarkdownOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationBlockMarkdownOneOf(codeblock string, body string) *IntegrationBlockMarkdownOneOf {
	this := IntegrationBlockMarkdownOneOf{}
	this.Codeblock = codeblock
	this.Body = body
	return &this
}

// NewIntegrationBlockMarkdownOneOfWithDefaults instantiates a new IntegrationBlockMarkdownOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationBlockMarkdownOneOfWithDefaults() *IntegrationBlockMarkdownOneOf {
	this := IntegrationBlockMarkdownOneOf{}
	return &this
}

// GetCodeblock returns the Codeblock field value
func (o *IntegrationBlockMarkdownOneOf) GetCodeblock() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Codeblock
}

// GetCodeblockOk returns a tuple with the Codeblock field value
// and a boolean to check if the value has been set.
func (o *IntegrationBlockMarkdownOneOf) GetCodeblockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Codeblock, true
}

// SetCodeblock sets field value
func (o *IntegrationBlockMarkdownOneOf) SetCodeblock(v string) {
	o.Codeblock = v
}

// GetBody returns the Body field value
func (o *IntegrationBlockMarkdownOneOf) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *IntegrationBlockMarkdownOneOf) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *IntegrationBlockMarkdownOneOf) SetBody(v string) {
	o.Body = v
}

func (o IntegrationBlockMarkdownOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationBlockMarkdownOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["codeblock"] = o.Codeblock
	toSerialize["body"] = o.Body
	return toSerialize, nil
}

type NullableIntegrationBlockMarkdownOneOf struct {
	value *IntegrationBlockMarkdownOneOf
	isSet bool
}

func (v NullableIntegrationBlockMarkdownOneOf) Get() *IntegrationBlockMarkdownOneOf {
	return v.value
}

func (v *NullableIntegrationBlockMarkdownOneOf) Set(val *IntegrationBlockMarkdownOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationBlockMarkdownOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationBlockMarkdownOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationBlockMarkdownOneOf(val *IntegrationBlockMarkdownOneOf) *NullableIntegrationBlockMarkdownOneOf {
	return &NullableIntegrationBlockMarkdownOneOf{value: val, isSet: true}
}

func (v NullableIntegrationBlockMarkdownOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationBlockMarkdownOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
