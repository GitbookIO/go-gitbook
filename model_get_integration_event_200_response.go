/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the GetIntegrationEvent200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIntegrationEvent200Response{}

// GetIntegrationEvent200Response struct for GetIntegrationEvent200Response
type GetIntegrationEvent200Response struct {
	Event IntegrationEvent       `json:"event"`
	Trace *IntegrationEventTrace `json:"trace,omitempty"`
}

// NewGetIntegrationEvent200Response instantiates a new GetIntegrationEvent200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntegrationEvent200Response(event IntegrationEvent) *GetIntegrationEvent200Response {
	this := GetIntegrationEvent200Response{}
	this.Event = event
	return &this
}

// NewGetIntegrationEvent200ResponseWithDefaults instantiates a new GetIntegrationEvent200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntegrationEvent200ResponseWithDefaults() *GetIntegrationEvent200Response {
	this := GetIntegrationEvent200Response{}
	return &this
}

// GetEvent returns the Event field value
func (o *GetIntegrationEvent200Response) GetEvent() IntegrationEvent {
	if o == nil {
		var ret IntegrationEvent
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *GetIntegrationEvent200Response) GetEventOk() (*IntegrationEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *GetIntegrationEvent200Response) SetEvent(v IntegrationEvent) {
	o.Event = v
}

// GetTrace returns the Trace field value if set, zero value otherwise.
func (o *GetIntegrationEvent200Response) GetTrace() IntegrationEventTrace {
	if o == nil || IsNil(o.Trace) {
		var ret IntegrationEventTrace
		return ret
	}
	return *o.Trace
}

// GetTraceOk returns a tuple with the Trace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntegrationEvent200Response) GetTraceOk() (*IntegrationEventTrace, bool) {
	if o == nil || IsNil(o.Trace) {
		return nil, false
	}
	return o.Trace, true
}

// HasTrace returns a boolean if a field has been set.
func (o *GetIntegrationEvent200Response) HasTrace() bool {
	if o != nil && !IsNil(o.Trace) {
		return true
	}

	return false
}

// SetTrace gets a reference to the given IntegrationEventTrace and assigns it to the Trace field.
func (o *GetIntegrationEvent200Response) SetTrace(v IntegrationEventTrace) {
	o.Trace = &v
}

func (o GetIntegrationEvent200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIntegrationEvent200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event"] = o.Event
	if !IsNil(o.Trace) {
		toSerialize["trace"] = o.Trace
	}
	return toSerialize, nil
}

type NullableGetIntegrationEvent200Response struct {
	value *GetIntegrationEvent200Response
	isSet bool
}

func (v NullableGetIntegrationEvent200Response) Get() *GetIntegrationEvent200Response {
	return v.value
}

func (v *NullableGetIntegrationEvent200Response) Set(val *GetIntegrationEvent200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntegrationEvent200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntegrationEvent200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntegrationEvent200Response(val *GetIntegrationEvent200Response) *NullableGetIntegrationEvent200Response {
	return &NullableGetIntegrationEvent200Response{value: val, isSet: true}
}

func (v NullableGetIntegrationEvent200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntegrationEvent200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
