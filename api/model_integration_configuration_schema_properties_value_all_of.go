// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationConfigurationSchemaPropertiesValueAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationConfigurationSchemaPropertiesValueAllOf{}

// IntegrationConfigurationSchemaPropertiesValueAllOf struct for IntegrationConfigurationSchemaPropertiesValueAllOf
type IntegrationConfigurationSchemaPropertiesValueAllOf struct {
	Title       *string `json:"title,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewIntegrationConfigurationSchemaPropertiesValueAllOf instantiates a new IntegrationConfigurationSchemaPropertiesValueAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationConfigurationSchemaPropertiesValueAllOf() *IntegrationConfigurationSchemaPropertiesValueAllOf {
	this := IntegrationConfigurationSchemaPropertiesValueAllOf{}
	return &this
}

// NewIntegrationConfigurationSchemaPropertiesValueAllOfWithDefaults instantiates a new IntegrationConfigurationSchemaPropertiesValueAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationConfigurationSchemaPropertiesValueAllOfWithDefaults() *IntegrationConfigurationSchemaPropertiesValueAllOf {
	this := IntegrationConfigurationSchemaPropertiesValueAllOf{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf) SetDescription(v string) {
	o.Description = &v
}

func (o IntegrationConfigurationSchemaPropertiesValueAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationConfigurationSchemaPropertiesValueAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableIntegrationConfigurationSchemaPropertiesValueAllOf struct {
	value *IntegrationConfigurationSchemaPropertiesValueAllOf
	isSet bool
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf) Get() *IntegrationConfigurationSchemaPropertiesValueAllOf {
	return v.value
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf) Set(val *IntegrationConfigurationSchemaPropertiesValueAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationConfigurationSchemaPropertiesValueAllOf(val *IntegrationConfigurationSchemaPropertiesValueAllOf) *NullableIntegrationConfigurationSchemaPropertiesValueAllOf {
	return &NullableIntegrationConfigurationSchemaPropertiesValueAllOf{value: val, isSet: true}
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
