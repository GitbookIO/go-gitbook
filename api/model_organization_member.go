// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the OrganizationMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationMember{}

// OrganizationMember struct for OrganizationMember
type OrganizationMember struct {
	// Type of Object, always equals to \"member\"
	Object string `json:"object"`
	// Unique identifier for the user.
	Id   string            `json:"id"`
	Role MemberRoleOrGuest `json:"role"`
	User User              `json:"user"`
	// Whatever the membership of this user is disabled and prevent them from accessing content.
	Disabled   bool    `json:"disabled"`
	JoinedAt   string  `json:"joinedAt"`
	LastSeenAt *string `json:"lastSeenAt,omitempty"`
	// Whether the user can login with SSO.
	Sso    bool    `json:"sso"`
	Spaces float32 `json:"spaces"`
	Teams  float32 `json:"teams"`
}

// NewOrganizationMember instantiates a new OrganizationMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationMember(object string, id string, role MemberRoleOrGuest, user User, disabled bool, joinedAt string, sso bool, spaces float32, teams float32) *OrganizationMember {
	this := OrganizationMember{}
	this.Object = object
	this.Id = id
	this.Role = role
	this.User = user
	this.Disabled = disabled
	this.JoinedAt = joinedAt
	this.Sso = sso
	this.Spaces = spaces
	this.Teams = teams
	return &this
}

// NewOrganizationMemberWithDefaults instantiates a new OrganizationMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationMemberWithDefaults() *OrganizationMember {
	this := OrganizationMember{}
	return &this
}

// GetObject returns the Object field value
func (o *OrganizationMember) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *OrganizationMember) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *OrganizationMember) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationMember) SetId(v string) {
	o.Id = v
}

// GetRole returns the Role field value
func (o *OrganizationMember) GetRole() MemberRoleOrGuest {
	if o == nil {
		var ret MemberRoleOrGuest
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetRoleOk() (*MemberRoleOrGuest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *OrganizationMember) SetRole(v MemberRoleOrGuest) {
	o.Role = v
}

// GetUser returns the User field value
func (o *OrganizationMember) GetUser() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetUserOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *OrganizationMember) SetUser(v User) {
	o.User = v
}

// GetDisabled returns the Disabled field value
func (o *OrganizationMember) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *OrganizationMember) SetDisabled(v bool) {
	o.Disabled = v
}

// GetJoinedAt returns the JoinedAt field value
func (o *OrganizationMember) GetJoinedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinedAt
}

// GetJoinedAtOk returns a tuple with the JoinedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetJoinedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JoinedAt, true
}

// SetJoinedAt sets field value
func (o *OrganizationMember) SetJoinedAt(v string) {
	o.JoinedAt = v
}

// GetLastSeenAt returns the LastSeenAt field value if set, zero value otherwise.
func (o *OrganizationMember) GetLastSeenAt() string {
	if o == nil || IsNil(o.LastSeenAt) {
		var ret string
		return ret
	}
	return *o.LastSeenAt
}

// GetLastSeenAtOk returns a tuple with the LastSeenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetLastSeenAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastSeenAt) {
		return nil, false
	}
	return o.LastSeenAt, true
}

// HasLastSeenAt returns a boolean if a field has been set.
func (o *OrganizationMember) HasLastSeenAt() bool {
	if o != nil && !IsNil(o.LastSeenAt) {
		return true
	}

	return false
}

// SetLastSeenAt gets a reference to the given string and assigns it to the LastSeenAt field.
func (o *OrganizationMember) SetLastSeenAt(v string) {
	o.LastSeenAt = &v
}

// GetSso returns the Sso field value
func (o *OrganizationMember) GetSso() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Sso
}

// GetSsoOk returns a tuple with the Sso field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetSsoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sso, true
}

// SetSso sets field value
func (o *OrganizationMember) SetSso(v bool) {
	o.Sso = v
}

// GetSpaces returns the Spaces field value
func (o *OrganizationMember) GetSpaces() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Spaces
}

// GetSpacesOk returns a tuple with the Spaces field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetSpacesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spaces, true
}

// SetSpaces sets field value
func (o *OrganizationMember) SetSpaces(v float32) {
	o.Spaces = v
}

// GetTeams returns the Teams field value
func (o *OrganizationMember) GetTeams() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value
// and a boolean to check if the value has been set.
func (o *OrganizationMember) GetTeamsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Teams, true
}

// SetTeams sets field value
func (o *OrganizationMember) SetTeams(v float32) {
	o.Teams = v
}

func (o OrganizationMember) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["role"] = o.Role
	toSerialize["user"] = o.User
	toSerialize["disabled"] = o.Disabled
	toSerialize["joinedAt"] = o.JoinedAt
	if !IsNil(o.LastSeenAt) {
		toSerialize["lastSeenAt"] = o.LastSeenAt
	}
	toSerialize["sso"] = o.Sso
	toSerialize["spaces"] = o.Spaces
	toSerialize["teams"] = o.Teams
	return toSerialize, nil
}

type NullableOrganizationMember struct {
	value *OrganizationMember
	isSet bool
}

func (v NullableOrganizationMember) Get() *OrganizationMember {
	return v.value
}

func (v *NullableOrganizationMember) Set(val *OrganizationMember) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationMember) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationMember(val *OrganizationMember) *NullableOrganizationMember {
	return &NullableOrganizationMember{value: val, isSet: true}
}

func (v NullableOrganizationMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
