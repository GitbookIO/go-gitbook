/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SubscriptionChannelOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionChannelOneOf1{}

// SubscriptionChannelOneOf1 struct for SubscriptionChannelOneOf1
type SubscriptionChannelOneOf1 struct {
	Channel       string  `json:"channel"`
	Space         string  `json:"space"`
	ChangeRequest *string `json:"changeRequest,omitempty"`
	Comment       string  `json:"comment"`
}

// NewSubscriptionChannelOneOf1 instantiates a new SubscriptionChannelOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionChannelOneOf1(channel string, space string, comment string) *SubscriptionChannelOneOf1 {
	this := SubscriptionChannelOneOf1{}
	this.Channel = channel
	this.Space = space
	this.Comment = comment
	return &this
}

// NewSubscriptionChannelOneOf1WithDefaults instantiates a new SubscriptionChannelOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionChannelOneOf1WithDefaults() *SubscriptionChannelOneOf1 {
	this := SubscriptionChannelOneOf1{}
	return &this
}

// GetChannel returns the Channel field value
func (o *SubscriptionChannelOneOf1) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf1) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *SubscriptionChannelOneOf1) SetChannel(v string) {
	o.Channel = v
}

// GetSpace returns the Space field value
func (o *SubscriptionChannelOneOf1) GetSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf1) GetSpaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Space, true
}

// SetSpace sets field value
func (o *SubscriptionChannelOneOf1) SetSpace(v string) {
	o.Space = v
}

// GetChangeRequest returns the ChangeRequest field value if set, zero value otherwise.
func (o *SubscriptionChannelOneOf1) GetChangeRequest() string {
	if o == nil || IsNil(o.ChangeRequest) {
		var ret string
		return ret
	}
	return *o.ChangeRequest
}

// GetChangeRequestOk returns a tuple with the ChangeRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf1) GetChangeRequestOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeRequest) {
		return nil, false
	}
	return o.ChangeRequest, true
}

// HasChangeRequest returns a boolean if a field has been set.
func (o *SubscriptionChannelOneOf1) HasChangeRequest() bool {
	if o != nil && !IsNil(o.ChangeRequest) {
		return true
	}

	return false
}

// SetChangeRequest gets a reference to the given string and assigns it to the ChangeRequest field.
func (o *SubscriptionChannelOneOf1) SetChangeRequest(v string) {
	o.ChangeRequest = &v
}

// GetComment returns the Comment field value
func (o *SubscriptionChannelOneOf1) GetComment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf1) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *SubscriptionChannelOneOf1) SetComment(v string) {
	o.Comment = v
}

func (o SubscriptionChannelOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionChannelOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel"] = o.Channel
	toSerialize["space"] = o.Space
	if !IsNil(o.ChangeRequest) {
		toSerialize["changeRequest"] = o.ChangeRequest
	}
	toSerialize["comment"] = o.Comment
	return toSerialize, nil
}

type NullableSubscriptionChannelOneOf1 struct {
	value *SubscriptionChannelOneOf1
	isSet bool
}

func (v NullableSubscriptionChannelOneOf1) Get() *SubscriptionChannelOneOf1 {
	return v.value
}

func (v *NullableSubscriptionChannelOneOf1) Set(val *SubscriptionChannelOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionChannelOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionChannelOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionChannelOneOf1(val *SubscriptionChannelOneOf1) *NullableSubscriptionChannelOneOf1 {
	return &NullableSubscriptionChannelOneOf1{value: val, isSet: true}
}

func (v NullableSubscriptionChannelOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionChannelOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
