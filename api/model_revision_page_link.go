/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RevisionPageLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevisionPageLink{}

// RevisionPageLink struct for RevisionPageLink
type RevisionPageLink struct {
	// Unique identifier for the page in the revision
	Id string `json:"id"`
	// Title of the page
	Title string `json:"title"`
	// Deprecated
	Kind string  `json:"kind"`
	Type string  `json:"type"`
	Href *string `json:"href,omitempty"`
}

// NewRevisionPageLink instantiates a new RevisionPageLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevisionPageLink(id string, title string, kind string, type_ string) *RevisionPageLink {
	this := RevisionPageLink{}
	this.Id = id
	this.Title = title
	this.Kind = kind
	this.Type = type_
	return &this
}

// NewRevisionPageLinkWithDefaults instantiates a new RevisionPageLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionPageLinkWithDefaults() *RevisionPageLink {
	this := RevisionPageLink{}
	return &this
}

// GetId returns the Id field value
func (o *RevisionPageLink) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RevisionPageLink) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RevisionPageLink) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *RevisionPageLink) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RevisionPageLink) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RevisionPageLink) SetTitle(v string) {
	o.Title = v
}

// GetKind returns the Kind field value
// Deprecated
func (o *RevisionPageLink) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *RevisionPageLink) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
// Deprecated
func (o *RevisionPageLink) SetKind(v string) {
	o.Kind = v
}

// GetType returns the Type field value
func (o *RevisionPageLink) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RevisionPageLink) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RevisionPageLink) SetType(v string) {
	o.Type = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RevisionPageLink) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevisionPageLink) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RevisionPageLink) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RevisionPageLink) SetHref(v string) {
	o.Href = &v
}

func (o RevisionPageLink) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevisionPageLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["kind"] = o.Kind
	toSerialize["type"] = o.Type
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	return toSerialize, nil
}

type NullableRevisionPageLink struct {
	value *RevisionPageLink
	isSet bool
}

func (v NullableRevisionPageLink) Get() *RevisionPageLink {
	return v.value
}

func (v *NullableRevisionPageLink) Set(val *RevisionPageLink) {
	v.value = val
	v.isSet = true
}

func (v NullableRevisionPageLink) IsSet() bool {
	return v.isSet
}

func (v *NullableRevisionPageLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevisionPageLink(val *RevisionPageLink) *NullableRevisionPageLink {
	return &NullableRevisionPageLink{value: val, isSet: true}
}

func (v NullableRevisionPageLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevisionPageLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
