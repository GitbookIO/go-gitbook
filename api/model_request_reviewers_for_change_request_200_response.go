/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestReviewersForChangeRequest200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestReviewersForChangeRequest200Response{}

// RequestReviewersForChangeRequest200Response struct for RequestReviewersForChangeRequest200Response
type RequestReviewersForChangeRequest200Response struct {
	// The user requests that were sent.
	Users []ChangeRequestRequestedReviewer `json:"users,omitempty"`
}

// NewRequestReviewersForChangeRequest200Response instantiates a new RequestReviewersForChangeRequest200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestReviewersForChangeRequest200Response() *RequestReviewersForChangeRequest200Response {
	this := RequestReviewersForChangeRequest200Response{}
	return &this
}

// NewRequestReviewersForChangeRequest200ResponseWithDefaults instantiates a new RequestReviewersForChangeRequest200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestReviewersForChangeRequest200ResponseWithDefaults() *RequestReviewersForChangeRequest200Response {
	this := RequestReviewersForChangeRequest200Response{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *RequestReviewersForChangeRequest200Response) GetUsers() []ChangeRequestRequestedReviewer {
	if o == nil || IsNil(o.Users) {
		var ret []ChangeRequestRequestedReviewer
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestReviewersForChangeRequest200Response) GetUsersOk() ([]ChangeRequestRequestedReviewer, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *RequestReviewersForChangeRequest200Response) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []ChangeRequestRequestedReviewer and assigns it to the Users field.
func (o *RequestReviewersForChangeRequest200Response) SetUsers(v []ChangeRequestRequestedReviewer) {
	o.Users = v
}

func (o RequestReviewersForChangeRequest200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestReviewersForChangeRequest200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableRequestReviewersForChangeRequest200Response struct {
	value *RequestReviewersForChangeRequest200Response
	isSet bool
}

func (v NullableRequestReviewersForChangeRequest200Response) Get() *RequestReviewersForChangeRequest200Response {
	return v.value
}

func (v *NullableRequestReviewersForChangeRequest200Response) Set(val *RequestReviewersForChangeRequest200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestReviewersForChangeRequest200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestReviewersForChangeRequest200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestReviewersForChangeRequest200Response(val *RequestReviewersForChangeRequest200Response) *NullableRequestReviewersForChangeRequest200Response {
	return &NullableRequestReviewersForChangeRequest200Response{value: val, isSet: true}
}

func (v NullableRequestReviewersForChangeRequest200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestReviewersForChangeRequest200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
