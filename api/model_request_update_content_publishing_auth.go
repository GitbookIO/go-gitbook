/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestUpdateContentPublishingAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestUpdateContentPublishingAuth{}

// RequestUpdateContentPublishingAuth struct for RequestUpdateContentPublishingAuth
type RequestUpdateContentPublishingAuth struct {
	// A fallback URL that will be used if authentication fails.
	FallbackURL *string `json:"fallbackURL,omitempty"`
}

// NewRequestUpdateContentPublishingAuth instantiates a new RequestUpdateContentPublishingAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestUpdateContentPublishingAuth() *RequestUpdateContentPublishingAuth {
	this := RequestUpdateContentPublishingAuth{}
	return &this
}

// NewRequestUpdateContentPublishingAuthWithDefaults instantiates a new RequestUpdateContentPublishingAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestUpdateContentPublishingAuthWithDefaults() *RequestUpdateContentPublishingAuth {
	this := RequestUpdateContentPublishingAuth{}
	return &this
}

// GetFallbackURL returns the FallbackURL field value if set, zero value otherwise.
func (o *RequestUpdateContentPublishingAuth) GetFallbackURL() string {
	if o == nil || IsNil(o.FallbackURL) {
		var ret string
		return ret
	}
	return *o.FallbackURL
}

// GetFallbackURLOk returns a tuple with the FallbackURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestUpdateContentPublishingAuth) GetFallbackURLOk() (*string, bool) {
	if o == nil || IsNil(o.FallbackURL) {
		return nil, false
	}
	return o.FallbackURL, true
}

// HasFallbackURL returns a boolean if a field has been set.
func (o *RequestUpdateContentPublishingAuth) HasFallbackURL() bool {
	if o != nil && !IsNil(o.FallbackURL) {
		return true
	}

	return false
}

// SetFallbackURL gets a reference to the given string and assigns it to the FallbackURL field.
func (o *RequestUpdateContentPublishingAuth) SetFallbackURL(v string) {
	o.FallbackURL = &v
}

func (o RequestUpdateContentPublishingAuth) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestUpdateContentPublishingAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FallbackURL) {
		toSerialize["fallbackURL"] = o.FallbackURL
	}
	return toSerialize, nil
}

type NullableRequestUpdateContentPublishingAuth struct {
	value *RequestUpdateContentPublishingAuth
	isSet bool
}

func (v NullableRequestUpdateContentPublishingAuth) Get() *RequestUpdateContentPublishingAuth {
	return v.value
}

func (v *NullableRequestUpdateContentPublishingAuth) Set(val *RequestUpdateContentPublishingAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestUpdateContentPublishingAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestUpdateContentPublishingAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestUpdateContentPublishingAuth(val *RequestUpdateContentPublishingAuth) *NullableRequestUpdateContentPublishingAuth {
	return &NullableRequestUpdateContentPublishingAuth{value: val, isSet: true}
}

func (v NullableRequestUpdateContentPublishingAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestUpdateContentPublishingAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
