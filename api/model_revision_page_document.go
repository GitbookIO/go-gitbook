// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RevisionPageDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevisionPageDocument{}

// RevisionPageDocument struct for RevisionPageDocument
type RevisionPageDocument struct {
	// Unique identifier for the page in the revision
	Id string `json:"id"`
	// Title of the page
	Title string `json:"title"`
	// Content of the document formatted as markdown
	Markdown string               `json:"markdown"`
	Document JSONDocumentDocument `json:"document"`
	// Deprecated
	Kind string `json:"kind"`
	Type string `json:"type"`
	// Page's slug in its direct parent
	Slug string `json:"slug"`
	// Complete path to access the page in the revision.
	Path        string                                `json:"path"`
	Description *string                               `json:"description,omitempty"`
	Pages       []RevisionPageDocumentAllOfPagesInner `json:"pages"`
}

// NewRevisionPageDocument instantiates a new RevisionPageDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevisionPageDocument(id string, title string, markdown string, document JSONDocumentDocument, kind string, type_ string, slug string, path string, pages []RevisionPageDocumentAllOfPagesInner) *RevisionPageDocument {
	this := RevisionPageDocument{}
	this.Id = id
	this.Title = title
	this.Markdown = markdown
	this.Document = document
	this.Kind = kind
	this.Type = type_
	this.Slug = slug
	this.Path = path
	this.Pages = pages
	return &this
}

// NewRevisionPageDocumentWithDefaults instantiates a new RevisionPageDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionPageDocumentWithDefaults() *RevisionPageDocument {
	this := RevisionPageDocument{}
	return &this
}

// GetId returns the Id field value
func (o *RevisionPageDocument) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RevisionPageDocument) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *RevisionPageDocument) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RevisionPageDocument) SetTitle(v string) {
	o.Title = v
}

// GetMarkdown returns the Markdown field value
func (o *RevisionPageDocument) GetMarkdown() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Markdown
}

// GetMarkdownOk returns a tuple with the Markdown field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetMarkdownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Markdown, true
}

// SetMarkdown sets field value
func (o *RevisionPageDocument) SetMarkdown(v string) {
	o.Markdown = v
}

// GetDocument returns the Document field value
func (o *RevisionPageDocument) GetDocument() JSONDocumentDocument {
	if o == nil {
		var ret JSONDocumentDocument
		return ret
	}

	return o.Document
}

// GetDocumentOk returns a tuple with the Document field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetDocumentOk() (*JSONDocumentDocument, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Document, true
}

// SetDocument sets field value
func (o *RevisionPageDocument) SetDocument(v JSONDocumentDocument) {
	o.Document = v
}

// GetKind returns the Kind field value
// Deprecated
func (o *RevisionPageDocument) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *RevisionPageDocument) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
// Deprecated
func (o *RevisionPageDocument) SetKind(v string) {
	o.Kind = v
}

// GetType returns the Type field value
func (o *RevisionPageDocument) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RevisionPageDocument) SetType(v string) {
	o.Type = v
}

// GetSlug returns the Slug field value
func (o *RevisionPageDocument) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *RevisionPageDocument) SetSlug(v string) {
	o.Slug = v
}

// GetPath returns the Path field value
func (o *RevisionPageDocument) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *RevisionPageDocument) SetPath(v string) {
	o.Path = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RevisionPageDocument) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RevisionPageDocument) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RevisionPageDocument) SetDescription(v string) {
	o.Description = &v
}

// GetPages returns the Pages field value
func (o *RevisionPageDocument) GetPages() []RevisionPageDocumentAllOfPagesInner {
	if o == nil {
		var ret []RevisionPageDocumentAllOfPagesInner
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *RevisionPageDocument) GetPagesOk() ([]RevisionPageDocumentAllOfPagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *RevisionPageDocument) SetPages(v []RevisionPageDocumentAllOfPagesInner) {
	o.Pages = v
}

func (o RevisionPageDocument) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevisionPageDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["markdown"] = o.Markdown
	toSerialize["document"] = o.Document
	toSerialize["kind"] = o.Kind
	toSerialize["type"] = o.Type
	toSerialize["slug"] = o.Slug
	toSerialize["path"] = o.Path
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

type NullableRevisionPageDocument struct {
	value *RevisionPageDocument
	isSet bool
}

func (v NullableRevisionPageDocument) Get() *RevisionPageDocument {
	return v.value
}

func (v *NullableRevisionPageDocument) Set(val *RevisionPageDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableRevisionPageDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableRevisionPageDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevisionPageDocument(val *RevisionPageDocument) *NullableRevisionPageDocument {
	return &NullableRevisionPageDocument{value: val, isSet: true}
}

func (v NullableRevisionPageDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevisionPageDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
