/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationSpaceInstallation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationSpaceInstallation{}

// IntegrationSpaceInstallation Installation of an integration at a space level
type IntegrationSpaceInstallation struct {
	// ID of the space the integration is installed on.
	Space  string                        `json:"space"`
	Status IntegrationInstallationStatus `json:"status"`
	// Configuration of the integration for this space
	Configuration map[string]interface{} `json:"configuration"`
	// External IDs assigned by the integration.
	ExternalIds []string                         `json:"externalIds"`
	Urls        IntegrationSpaceInstallationUrls `json:"urls"`
}

// NewIntegrationSpaceInstallation instantiates a new IntegrationSpaceInstallation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationSpaceInstallation(space string, status IntegrationInstallationStatus, configuration map[string]interface{}, externalIds []string, urls IntegrationSpaceInstallationUrls) *IntegrationSpaceInstallation {
	this := IntegrationSpaceInstallation{}
	this.Space = space
	this.Status = status
	this.Configuration = configuration
	this.ExternalIds = externalIds
	this.Urls = urls
	return &this
}

// NewIntegrationSpaceInstallationWithDefaults instantiates a new IntegrationSpaceInstallation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationSpaceInstallationWithDefaults() *IntegrationSpaceInstallation {
	this := IntegrationSpaceInstallation{}
	return &this
}

// GetSpace returns the Space field value
func (o *IntegrationSpaceInstallation) GetSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value
// and a boolean to check if the value has been set.
func (o *IntegrationSpaceInstallation) GetSpaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Space, true
}

// SetSpace sets field value
func (o *IntegrationSpaceInstallation) SetSpace(v string) {
	o.Space = v
}

// GetStatus returns the Status field value
func (o *IntegrationSpaceInstallation) GetStatus() IntegrationInstallationStatus {
	if o == nil {
		var ret IntegrationInstallationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *IntegrationSpaceInstallation) GetStatusOk() (*IntegrationInstallationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *IntegrationSpaceInstallation) SetStatus(v IntegrationInstallationStatus) {
	o.Status = v
}

// GetConfiguration returns the Configuration field value
func (o *IntegrationSpaceInstallation) GetConfiguration() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *IntegrationSpaceInstallation) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// SetConfiguration sets field value
func (o *IntegrationSpaceInstallation) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

// GetExternalIds returns the ExternalIds field value
func (o *IntegrationSpaceInstallation) GetExternalIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ExternalIds
}

// GetExternalIdsOk returns a tuple with the ExternalIds field value
// and a boolean to check if the value has been set.
func (o *IntegrationSpaceInstallation) GetExternalIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalIds, true
}

// SetExternalIds sets field value
func (o *IntegrationSpaceInstallation) SetExternalIds(v []string) {
	o.ExternalIds = v
}

// GetUrls returns the Urls field value
func (o *IntegrationSpaceInstallation) GetUrls() IntegrationSpaceInstallationUrls {
	if o == nil {
		var ret IntegrationSpaceInstallationUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *IntegrationSpaceInstallation) GetUrlsOk() (*IntegrationSpaceInstallationUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *IntegrationSpaceInstallation) SetUrls(v IntegrationSpaceInstallationUrls) {
	o.Urls = v
}

func (o IntegrationSpaceInstallation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationSpaceInstallation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["space"] = o.Space
	toSerialize["status"] = o.Status
	toSerialize["configuration"] = o.Configuration
	toSerialize["externalIds"] = o.ExternalIds
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

type NullableIntegrationSpaceInstallation struct {
	value *IntegrationSpaceInstallation
	isSet bool
}

func (v NullableIntegrationSpaceInstallation) Get() *IntegrationSpaceInstallation {
	return v.value
}

func (v *NullableIntegrationSpaceInstallation) Set(val *IntegrationSpaceInstallation) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationSpaceInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationSpaceInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationSpaceInstallation(val *IntegrationSpaceInstallation) *NullableIntegrationSpaceInstallation {
	return &NullableIntegrationSpaceInstallation{value: val, isSet: true}
}

func (v NullableIntegrationSpaceInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationSpaceInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
