/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the StopRecordingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StopRecordingRequest{}

// StopRecordingRequest struct for StopRecordingRequest
type StopRecordingRequest struct {
	// The space in which the docs should be generated
	Space string `json:"space"`
}

// NewStopRecordingRequest instantiates a new StopRecordingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStopRecordingRequest(space string) *StopRecordingRequest {
	this := StopRecordingRequest{}
	this.Space = space
	return &this
}

// NewStopRecordingRequestWithDefaults instantiates a new StopRecordingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStopRecordingRequestWithDefaults() *StopRecordingRequest {
	this := StopRecordingRequest{}
	return &this
}

// GetSpace returns the Space field value
func (o *StopRecordingRequest) GetSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value
// and a boolean to check if the value has been set.
func (o *StopRecordingRequest) GetSpaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Space, true
}

// SetSpace sets field value
func (o *StopRecordingRequest) SetSpace(v string) {
	o.Space = v
}

func (o StopRecordingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StopRecordingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["space"] = o.Space
	return toSerialize, nil
}

type NullableStopRecordingRequest struct {
	value *StopRecordingRequest
	isSet bool
}

func (v NullableStopRecordingRequest) Get() *StopRecordingRequest {
	return v.value
}

func (v *NullableStopRecordingRequest) Set(val *StopRecordingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStopRecordingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStopRecordingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStopRecordingRequest(val *StopRecordingRequest) *NullableStopRecordingRequest {
	return &NullableStopRecordingRequest{value: val, isSet: true}
}

func (v NullableStopRecordingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStopRecordingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
