/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SpaceRelation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpaceRelation{}

// SpaceRelation Relation between an origin space and another space
type SpaceRelation struct {
	Id        string              `json:"id"`
	Type      SpaceRelationType   `json:"type"`
	Target    SpaceRelationTarget `json:"target"`
	CreatedAt string              `json:"createdAt"`
	Urls      SpaceRelationUrls   `json:"urls"`
}

// NewSpaceRelation instantiates a new SpaceRelation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpaceRelation(id string, type_ SpaceRelationType, target SpaceRelationTarget, createdAt string, urls SpaceRelationUrls) *SpaceRelation {
	this := SpaceRelation{}
	this.Id = id
	this.Type = type_
	this.Target = target
	this.CreatedAt = createdAt
	this.Urls = urls
	return &this
}

// NewSpaceRelationWithDefaults instantiates a new SpaceRelation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpaceRelationWithDefaults() *SpaceRelation {
	this := SpaceRelation{}
	return &this
}

// GetId returns the Id field value
func (o *SpaceRelation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SpaceRelation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SpaceRelation) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *SpaceRelation) GetType() SpaceRelationType {
	if o == nil {
		var ret SpaceRelationType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SpaceRelation) GetTypeOk() (*SpaceRelationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SpaceRelation) SetType(v SpaceRelationType) {
	o.Type = v
}

// GetTarget returns the Target field value
func (o *SpaceRelation) GetTarget() SpaceRelationTarget {
	if o == nil {
		var ret SpaceRelationTarget
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *SpaceRelation) GetTargetOk() (*SpaceRelationTarget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *SpaceRelation) SetTarget(v SpaceRelationTarget) {
	o.Target = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SpaceRelation) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SpaceRelation) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SpaceRelation) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUrls returns the Urls field value
func (o *SpaceRelation) GetUrls() SpaceRelationUrls {
	if o == nil {
		var ret SpaceRelationUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *SpaceRelation) GetUrlsOk() (*SpaceRelationUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *SpaceRelation) SetUrls(v SpaceRelationUrls) {
	o.Urls = v
}

func (o SpaceRelation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpaceRelation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["target"] = o.Target
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

type NullableSpaceRelation struct {
	value *SpaceRelation
	isSet bool
}

func (v NullableSpaceRelation) Get() *SpaceRelation {
	return v.value
}

func (v *NullableSpaceRelation) Set(val *SpaceRelation) {
	v.value = val
	v.isSet = true
}

func (v NullableSpaceRelation) IsSet() bool {
	return v.isSet
}

func (v *NullableSpaceRelation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpaceRelation(val *SpaceRelation) *NullableSpaceRelation {
	return &NullableSpaceRelation{value: val, isSet: true}
}

func (v NullableSpaceRelation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpaceRelation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
