/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the CloudflareHostnameTLSValidationError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudflareHostnameTLSValidationError{}

// CloudflareHostnameTLSValidationError The Cloudflare Hostname TLS validation error
type CloudflareHostnameTLSValidationError struct {
	Message string `json:"message"`
}

// NewCloudflareHostnameTLSValidationError instantiates a new CloudflareHostnameTLSValidationError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudflareHostnameTLSValidationError(message string) *CloudflareHostnameTLSValidationError {
	this := CloudflareHostnameTLSValidationError{}
	this.Message = message
	return &this
}

// NewCloudflareHostnameTLSValidationErrorWithDefaults instantiates a new CloudflareHostnameTLSValidationError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudflareHostnameTLSValidationErrorWithDefaults() *CloudflareHostnameTLSValidationError {
	this := CloudflareHostnameTLSValidationError{}
	return &this
}

// GetMessage returns the Message field value
func (o *CloudflareHostnameTLSValidationError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CloudflareHostnameTLSValidationError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *CloudflareHostnameTLSValidationError) SetMessage(v string) {
	o.Message = v
}

func (o CloudflareHostnameTLSValidationError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudflareHostnameTLSValidationError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableCloudflareHostnameTLSValidationError struct {
	value *CloudflareHostnameTLSValidationError
	isSet bool
}

func (v NullableCloudflareHostnameTLSValidationError) Get() *CloudflareHostnameTLSValidationError {
	return v.value
}

func (v *NullableCloudflareHostnameTLSValidationError) Set(val *CloudflareHostnameTLSValidationError) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudflareHostnameTLSValidationError) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudflareHostnameTLSValidationError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudflareHostnameTLSValidationError(val *CloudflareHostnameTLSValidationError) *NullableCloudflareHostnameTLSValidationError {
	return &NullableCloudflareHostnameTLSValidationError{value: val, isSet: true}
}

func (v NullableCloudflareHostnameTLSValidationError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudflareHostnameTLSValidationError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
