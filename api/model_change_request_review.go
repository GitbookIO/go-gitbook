// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the ChangeRequestReview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChangeRequestReview{}

// ChangeRequestReview struct for ChangeRequestReview
type ChangeRequestReview struct {
	// Type of Object, always equals to \"change-request-review\"
	Object string `json:"object"`
	// Unique identifier for the review.
	Id string `json:"id"`
	// The revision this review was made against.
	Revision    string                    `json:"revision"`
	Reviewer    User                      `json:"reviewer"`
	RequestedBy *User                     `json:"requestedBy,omitempty"`
	Status      ChangeRequestReviewStatus `json:"status"`
	Comment     *Comment                  `json:"comment,omitempty"`
	CreatedAt   string                    `json:"createdAt"`
	UpdatedAt   string                    `json:"updatedAt"`
}

// NewChangeRequestReview instantiates a new ChangeRequestReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestReview(object string, id string, revision string, reviewer User, status ChangeRequestReviewStatus, createdAt string, updatedAt string) *ChangeRequestReview {
	this := ChangeRequestReview{}
	this.Object = object
	this.Id = id
	this.Revision = revision
	this.Reviewer = reviewer
	this.Status = status
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewChangeRequestReviewWithDefaults instantiates a new ChangeRequestReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestReviewWithDefaults() *ChangeRequestReview {
	this := ChangeRequestReview{}
	return &this
}

// GetObject returns the Object field value
func (o *ChangeRequestReview) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ChangeRequestReview) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *ChangeRequestReview) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ChangeRequestReview) SetId(v string) {
	o.Id = v
}

// GetRevision returns the Revision field value
func (o *ChangeRequestReview) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ChangeRequestReview) SetRevision(v string) {
	o.Revision = v
}

// GetReviewer returns the Reviewer field value
func (o *ChangeRequestReview) GetReviewer() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.Reviewer
}

// GetReviewerOk returns a tuple with the Reviewer field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetReviewerOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reviewer, true
}

// SetReviewer sets field value
func (o *ChangeRequestReview) SetReviewer(v User) {
	o.Reviewer = v
}

// GetRequestedBy returns the RequestedBy field value if set, zero value otherwise.
func (o *ChangeRequestReview) GetRequestedBy() User {
	if o == nil || IsNil(o.RequestedBy) {
		var ret User
		return ret
	}
	return *o.RequestedBy
}

// GetRequestedByOk returns a tuple with the RequestedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetRequestedByOk() (*User, bool) {
	if o == nil || IsNil(o.RequestedBy) {
		return nil, false
	}
	return o.RequestedBy, true
}

// HasRequestedBy returns a boolean if a field has been set.
func (o *ChangeRequestReview) HasRequestedBy() bool {
	if o != nil && !IsNil(o.RequestedBy) {
		return true
	}

	return false
}

// SetRequestedBy gets a reference to the given User and assigns it to the RequestedBy field.
func (o *ChangeRequestReview) SetRequestedBy(v User) {
	o.RequestedBy = &v
}

// GetStatus returns the Status field value
func (o *ChangeRequestReview) GetStatus() ChangeRequestReviewStatus {
	if o == nil {
		var ret ChangeRequestReviewStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetStatusOk() (*ChangeRequestReviewStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ChangeRequestReview) SetStatus(v ChangeRequestReviewStatus) {
	o.Status = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ChangeRequestReview) GetComment() Comment {
	if o == nil || IsNil(o.Comment) {
		var ret Comment
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetCommentOk() (*Comment, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ChangeRequestReview) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given Comment and assigns it to the Comment field.
func (o *ChangeRequestReview) SetComment(v Comment) {
	o.Comment = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ChangeRequestReview) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ChangeRequestReview) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ChangeRequestReview) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ChangeRequestReview) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ChangeRequestReview) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o ChangeRequestReview) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChangeRequestReview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["revision"] = o.Revision
	toSerialize["reviewer"] = o.Reviewer
	if !IsNil(o.RequestedBy) {
		toSerialize["requestedBy"] = o.RequestedBy
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableChangeRequestReview struct {
	value *ChangeRequestReview
	isSet bool
}

func (v NullableChangeRequestReview) Get() *ChangeRequestReview {
	return v.value
}

func (v *NullableChangeRequestReview) Set(val *ChangeRequestReview) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestReview) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestReview(val *ChangeRequestReview) *NullableChangeRequestReview {
	return &NullableChangeRequestReview{value: val, isSet: true}
}

func (v NullableChangeRequestReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
