/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the CustomDomainInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomDomainInfo{}

// CustomDomainInfo Cloudflare Custom Domain's information
type CustomDomainInfo struct {
	Hostname           string                     `json:"hostname"`
	Status             CloudflareHostnameStatus   `json:"status"`
	CreatedAt          string                     `json:"createdAt"`
	Ssl                *CloudflareHostnameTLSInfo `json:"ssl,omitempty"`
	VerificationErrors []string                   `json:"verificationErrors"`
}

// NewCustomDomainInfo instantiates a new CustomDomainInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDomainInfo(hostname string, status CloudflareHostnameStatus, createdAt string, verificationErrors []string) *CustomDomainInfo {
	this := CustomDomainInfo{}
	this.Hostname = hostname
	this.Status = status
	this.CreatedAt = createdAt
	this.VerificationErrors = verificationErrors
	return &this
}

// NewCustomDomainInfoWithDefaults instantiates a new CustomDomainInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDomainInfoWithDefaults() *CustomDomainInfo {
	this := CustomDomainInfo{}
	return &this
}

// GetHostname returns the Hostname field value
func (o *CustomDomainInfo) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *CustomDomainInfo) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *CustomDomainInfo) SetHostname(v string) {
	o.Hostname = v
}

// GetStatus returns the Status field value
func (o *CustomDomainInfo) GetStatus() CloudflareHostnameStatus {
	if o == nil {
		var ret CloudflareHostnameStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CustomDomainInfo) GetStatusOk() (*CloudflareHostnameStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CustomDomainInfo) SetStatus(v CloudflareHostnameStatus) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CustomDomainInfo) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CustomDomainInfo) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CustomDomainInfo) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetSsl returns the Ssl field value if set, zero value otherwise.
func (o *CustomDomainInfo) GetSsl() CloudflareHostnameTLSInfo {
	if o == nil || IsNil(o.Ssl) {
		var ret CloudflareHostnameTLSInfo
		return ret
	}
	return *o.Ssl
}

// GetSslOk returns a tuple with the Ssl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDomainInfo) GetSslOk() (*CloudflareHostnameTLSInfo, bool) {
	if o == nil || IsNil(o.Ssl) {
		return nil, false
	}
	return o.Ssl, true
}

// HasSsl returns a boolean if a field has been set.
func (o *CustomDomainInfo) HasSsl() bool {
	if o != nil && !IsNil(o.Ssl) {
		return true
	}

	return false
}

// SetSsl gets a reference to the given CloudflareHostnameTLSInfo and assigns it to the Ssl field.
func (o *CustomDomainInfo) SetSsl(v CloudflareHostnameTLSInfo) {
	o.Ssl = &v
}

// GetVerificationErrors returns the VerificationErrors field value
func (o *CustomDomainInfo) GetVerificationErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VerificationErrors
}

// GetVerificationErrorsOk returns a tuple with the VerificationErrors field value
// and a boolean to check if the value has been set.
func (o *CustomDomainInfo) GetVerificationErrorsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VerificationErrors, true
}

// SetVerificationErrors sets field value
func (o *CustomDomainInfo) SetVerificationErrors(v []string) {
	o.VerificationErrors = v
}

func (o CustomDomainInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomDomainInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hostname"] = o.Hostname
	toSerialize["status"] = o.Status
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.Ssl) {
		toSerialize["ssl"] = o.Ssl
	}
	toSerialize["verificationErrors"] = o.VerificationErrors
	return toSerialize, nil
}

type NullableCustomDomainInfo struct {
	value *CustomDomainInfo
	isSet bool
}

func (v NullableCustomDomainInfo) Get() *CustomDomainInfo {
	return v.value
}

func (v *NullableCustomDomainInfo) Set(val *CustomDomainInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDomainInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDomainInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDomainInfo(val *CustomDomainInfo) *NullableCustomDomainInfo {
	return &NullableCustomDomainInfo{value: val, isSet: true}
}

func (v NullableCustomDomainInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDomainInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
