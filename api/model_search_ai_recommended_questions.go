/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SearchAIRecommendedQuestions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchAIRecommendedQuestions{}

// SearchAIRecommendedQuestions Questions recommended by the AI for the given content.
type SearchAIRecommendedQuestions struct {
	Questions []string `json:"questions"`
}

// NewSearchAIRecommendedQuestions instantiates a new SearchAIRecommendedQuestions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchAIRecommendedQuestions(questions []string) *SearchAIRecommendedQuestions {
	this := SearchAIRecommendedQuestions{}
	this.Questions = questions
	return &this
}

// NewSearchAIRecommendedQuestionsWithDefaults instantiates a new SearchAIRecommendedQuestions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchAIRecommendedQuestionsWithDefaults() *SearchAIRecommendedQuestions {
	this := SearchAIRecommendedQuestions{}
	return &this
}

// GetQuestions returns the Questions field value
func (o *SearchAIRecommendedQuestions) GetQuestions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Questions
}

// GetQuestionsOk returns a tuple with the Questions field value
// and a boolean to check if the value has been set.
func (o *SearchAIRecommendedQuestions) GetQuestionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Questions, true
}

// SetQuestions sets field value
func (o *SearchAIRecommendedQuestions) SetQuestions(v []string) {
	o.Questions = v
}

func (o SearchAIRecommendedQuestions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchAIRecommendedQuestions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["questions"] = o.Questions
	return toSerialize, nil
}

type NullableSearchAIRecommendedQuestions struct {
	value *SearchAIRecommendedQuestions
	isSet bool
}

func (v NullableSearchAIRecommendedQuestions) Get() *SearchAIRecommendedQuestions {
	return v.value
}

func (v *NullableSearchAIRecommendedQuestions) Set(val *SearchAIRecommendedQuestions) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchAIRecommendedQuestions) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchAIRecommendedQuestions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchAIRecommendedQuestions(val *SearchAIRecommendedQuestions) *NullableSearchAIRecommendedQuestions {
	return &NullableSearchAIRecommendedQuestions{value: val, isSet: true}
}

func (v NullableSearchAIRecommendedQuestions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchAIRecommendedQuestions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
