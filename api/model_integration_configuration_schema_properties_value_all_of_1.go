/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
	"fmt"
)

// IntegrationConfigurationSchemaPropertiesValueAllOf1 - struct for IntegrationConfigurationSchemaPropertiesValueAllOf1
type IntegrationConfigurationSchemaPropertiesValueAllOf1 struct {
	IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf  *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf
	IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1
	IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2
	IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3
}

// IntegrationConfigurationSchemaPropertiesValueAllOf1OneOfAsIntegrationConfigurationSchemaPropertiesValueAllOf1 is a convenience function that returns IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf wrapped in IntegrationConfigurationSchemaPropertiesValueAllOf1
func IntegrationConfigurationSchemaPropertiesValueAllOf1OneOfAsIntegrationConfigurationSchemaPropertiesValueAllOf1(v *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf) IntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return IntegrationConfigurationSchemaPropertiesValueAllOf1{
		IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf: v,
	}
}

// IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1AsIntegrationConfigurationSchemaPropertiesValueAllOf1 is a convenience function that returns IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 wrapped in IntegrationConfigurationSchemaPropertiesValueAllOf1
func IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1AsIntegrationConfigurationSchemaPropertiesValueAllOf1(v *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1) IntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return IntegrationConfigurationSchemaPropertiesValueAllOf1{
		IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1: v,
	}
}

// IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2AsIntegrationConfigurationSchemaPropertiesValueAllOf1 is a convenience function that returns IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 wrapped in IntegrationConfigurationSchemaPropertiesValueAllOf1
func IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2AsIntegrationConfigurationSchemaPropertiesValueAllOf1(v *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2) IntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return IntegrationConfigurationSchemaPropertiesValueAllOf1{
		IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2: v,
	}
}

// IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3AsIntegrationConfigurationSchemaPropertiesValueAllOf1 is a convenience function that returns IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 wrapped in IntegrationConfigurationSchemaPropertiesValueAllOf1
func IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3AsIntegrationConfigurationSchemaPropertiesValueAllOf1(v *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) IntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return IntegrationConfigurationSchemaPropertiesValueAllOf1{
		IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *IntegrationConfigurationSchemaPropertiesValueAllOf1) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf
	err = newStrictDecoder(data).Decode(&dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf)
	if err == nil {
		jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf, _ := json.Marshal(dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf)
		if string(jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf) == "{}" { // empty struct
			dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf = nil
		} else {
			match++
		}
	} else {
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf = nil
	}

	// try to unmarshal data into IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1
	err = newStrictDecoder(data).Decode(&dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1)
	if err == nil {
		jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1, _ := json.Marshal(dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1)
		if string(jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1) == "{}" { // empty struct
			dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 = nil
	}

	// try to unmarshal data into IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2
	err = newStrictDecoder(data).Decode(&dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2)
	if err == nil {
		jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2, _ := json.Marshal(dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2)
		if string(jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2) == "{}" { // empty struct
			dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 = nil
		} else {
			match++
		}
	} else {
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 = nil
	}

	// try to unmarshal data into IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3
	err = newStrictDecoder(data).Decode(&dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3)
	if err == nil {
		jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3, _ := json.Marshal(dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3)
		if string(jsonIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) == "{}" { // empty struct
			dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 = nil
		} else {
			match++
		}
	} else {
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf = nil
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 = nil
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 = nil
		dst.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IntegrationConfigurationSchemaPropertiesValueAllOf1)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IntegrationConfigurationSchemaPropertiesValueAllOf1)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IntegrationConfigurationSchemaPropertiesValueAllOf1) MarshalJSON() ([]byte, error) {
	if src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf != nil {
		return json.Marshal(&src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf)
	}

	if src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 != nil {
		return json.Marshal(&src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1)
	}

	if src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 != nil {
		return json.Marshal(&src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2)
	}

	if src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 != nil {
		return json.Marshal(&src.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IntegrationConfigurationSchemaPropertiesValueAllOf1) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf != nil {
		return obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf
	}

	if obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1 != nil {
		return obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf1
	}

	if obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2 != nil {
		return obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf2
	}

	if obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 != nil {
		return obj.IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3
	}

	// all schemas are nil
	return nil
}

type NullableIntegrationConfigurationSchemaPropertiesValueAllOf1 struct {
	value *IntegrationConfigurationSchemaPropertiesValueAllOf1
	isSet bool
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) Get() *IntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return v.value
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) Set(val *IntegrationConfigurationSchemaPropertiesValueAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationConfigurationSchemaPropertiesValueAllOf1(val *IntegrationConfigurationSchemaPropertiesValueAllOf1) *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1 {
	return &NullableIntegrationConfigurationSchemaPropertiesValueAllOf1{value: val, isSet: true}
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
