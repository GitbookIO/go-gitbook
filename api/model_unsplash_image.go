/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the UnsplashImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnsplashImage{}

// UnsplashImage struct for UnsplashImage
type UnsplashImage struct {
	Kind             string              `json:"kind"`
	Id               string              `json:"id"`
	Description      string              `json:"description"`
	DownloadLocation string              `json:"downloadLocation"`
	Urls             UnsplashImageUrls   `json:"urls"`
	Author           UnsplashImageAuthor `json:"author"`
}

// NewUnsplashImage instantiates a new UnsplashImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnsplashImage(kind string, id string, description string, downloadLocation string, urls UnsplashImageUrls, author UnsplashImageAuthor) *UnsplashImage {
	this := UnsplashImage{}
	this.Kind = kind
	this.Id = id
	this.Description = description
	this.DownloadLocation = downloadLocation
	this.Urls = urls
	this.Author = author
	return &this
}

// NewUnsplashImageWithDefaults instantiates a new UnsplashImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnsplashImageWithDefaults() *UnsplashImage {
	this := UnsplashImage{}
	return &this
}

// GetKind returns the Kind field value
func (o *UnsplashImage) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *UnsplashImage) SetKind(v string) {
	o.Kind = v
}

// GetId returns the Id field value
func (o *UnsplashImage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UnsplashImage) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *UnsplashImage) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UnsplashImage) SetDescription(v string) {
	o.Description = v
}

// GetDownloadLocation returns the DownloadLocation field value
func (o *UnsplashImage) GetDownloadLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DownloadLocation
}

// GetDownloadLocationOk returns a tuple with the DownloadLocation field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetDownloadLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DownloadLocation, true
}

// SetDownloadLocation sets field value
func (o *UnsplashImage) SetDownloadLocation(v string) {
	o.DownloadLocation = v
}

// GetUrls returns the Urls field value
func (o *UnsplashImage) GetUrls() UnsplashImageUrls {
	if o == nil {
		var ret UnsplashImageUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetUrlsOk() (*UnsplashImageUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *UnsplashImage) SetUrls(v UnsplashImageUrls) {
	o.Urls = v
}

// GetAuthor returns the Author field value
func (o *UnsplashImage) GetAuthor() UnsplashImageAuthor {
	if o == nil {
		var ret UnsplashImageAuthor
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *UnsplashImage) GetAuthorOk() (*UnsplashImageAuthor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *UnsplashImage) SetAuthor(v UnsplashImageAuthor) {
	o.Author = v
}

func (o UnsplashImage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnsplashImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	toSerialize["id"] = o.Id
	toSerialize["description"] = o.Description
	toSerialize["downloadLocation"] = o.DownloadLocation
	toSerialize["urls"] = o.Urls
	toSerialize["author"] = o.Author
	return toSerialize, nil
}

type NullableUnsplashImage struct {
	value *UnsplashImage
	isSet bool
}

func (v NullableUnsplashImage) Get() *UnsplashImage {
	return v.value
}

func (v *NullableUnsplashImage) Set(val *UnsplashImage) {
	v.value = val
	v.isSet = true
}

func (v NullableUnsplashImage) IsSet() bool {
	return v.isSet
}

func (v *NullableUnsplashImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnsplashImage(val *UnsplashImage) *NullableUnsplashImage {
	return &NullableUnsplashImage{value: val, isSet: true}
}

func (v NullableUnsplashImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnsplashImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
