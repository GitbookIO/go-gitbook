// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the TriggerContentIndexingContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TriggerContentIndexingContext{}

// TriggerContentIndexingContext The context to send when triggering a content indexing.
type TriggerContentIndexingContext struct {
	// The unique identifier of the Space to index.
	SpaceId string `json:"spaceId"`
	// Whether to force a complete re-indexing of the Space.
	Force bool `json:"force"`
}

// NewTriggerContentIndexingContext instantiates a new TriggerContentIndexingContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerContentIndexingContext(spaceId string, force bool) *TriggerContentIndexingContext {
	this := TriggerContentIndexingContext{}
	this.SpaceId = spaceId
	this.Force = force
	return &this
}

// NewTriggerContentIndexingContextWithDefaults instantiates a new TriggerContentIndexingContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerContentIndexingContextWithDefaults() *TriggerContentIndexingContext {
	this := TriggerContentIndexingContext{}
	return &this
}

// GetSpaceId returns the SpaceId field value
func (o *TriggerContentIndexingContext) GetSpaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value
// and a boolean to check if the value has been set.
func (o *TriggerContentIndexingContext) GetSpaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceId, true
}

// SetSpaceId sets field value
func (o *TriggerContentIndexingContext) SetSpaceId(v string) {
	o.SpaceId = v
}

// GetForce returns the Force field value
func (o *TriggerContentIndexingContext) GetForce() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Force
}

// GetForceOk returns a tuple with the Force field value
// and a boolean to check if the value has been set.
func (o *TriggerContentIndexingContext) GetForceOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Force, true
}

// SetForce sets field value
func (o *TriggerContentIndexingContext) SetForce(v bool) {
	o.Force = v
}

func (o TriggerContentIndexingContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TriggerContentIndexingContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["spaceId"] = o.SpaceId
	toSerialize["force"] = o.Force
	return toSerialize, nil
}

type NullableTriggerContentIndexingContext struct {
	value *TriggerContentIndexingContext
	isSet bool
}

func (v NullableTriggerContentIndexingContext) Get() *TriggerContentIndexingContext {
	return v.value
}

func (v *NullableTriggerContentIndexingContext) Set(val *TriggerContentIndexingContext) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerContentIndexingContext) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerContentIndexingContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerContentIndexingContext(val *TriggerContentIndexingContext) *NullableTriggerContentIndexingContext {
	return &NullableTriggerContentIndexingContext{value: val, isSet: true}
}

func (v NullableTriggerContentIndexingContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerContentIndexingContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
