/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the UpdateIntegrationDevSpaceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateIntegrationDevSpaceRequest{}

// UpdateIntegrationDevSpaceRequest struct for UpdateIntegrationDevSpaceRequest
type UpdateIntegrationDevSpaceRequest struct {
	// URL of the tunnel to dispatch integration events to
	TunnelUrl string `json:"tunnelUrl"`
}

// NewUpdateIntegrationDevSpaceRequest instantiates a new UpdateIntegrationDevSpaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateIntegrationDevSpaceRequest(tunnelUrl string) *UpdateIntegrationDevSpaceRequest {
	this := UpdateIntegrationDevSpaceRequest{}
	this.TunnelUrl = tunnelUrl
	return &this
}

// NewUpdateIntegrationDevSpaceRequestWithDefaults instantiates a new UpdateIntegrationDevSpaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateIntegrationDevSpaceRequestWithDefaults() *UpdateIntegrationDevSpaceRequest {
	this := UpdateIntegrationDevSpaceRequest{}
	return &this
}

// GetTunnelUrl returns the TunnelUrl field value
func (o *UpdateIntegrationDevSpaceRequest) GetTunnelUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TunnelUrl
}

// GetTunnelUrlOk returns a tuple with the TunnelUrl field value
// and a boolean to check if the value has been set.
func (o *UpdateIntegrationDevSpaceRequest) GetTunnelUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TunnelUrl, true
}

// SetTunnelUrl sets field value
func (o *UpdateIntegrationDevSpaceRequest) SetTunnelUrl(v string) {
	o.TunnelUrl = v
}

func (o UpdateIntegrationDevSpaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateIntegrationDevSpaceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tunnelUrl"] = o.TunnelUrl
	return toSerialize, nil
}

type NullableUpdateIntegrationDevSpaceRequest struct {
	value *UpdateIntegrationDevSpaceRequest
	isSet bool
}

func (v NullableUpdateIntegrationDevSpaceRequest) Get() *UpdateIntegrationDevSpaceRequest {
	return v.value
}

func (v *NullableUpdateIntegrationDevSpaceRequest) Set(val *UpdateIntegrationDevSpaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateIntegrationDevSpaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateIntegrationDevSpaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateIntegrationDevSpaceRequest(val *UpdateIntegrationDevSpaceRequest) *NullableUpdateIntegrationDevSpaceRequest {
	return &NullableUpdateIntegrationDevSpaceRequest{value: val, isSet: true}
}

func (v NullableUpdateIntegrationDevSpaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateIntegrationDevSpaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
