/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RevisionPageGroupAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevisionPageGroupAllOf{}

// RevisionPageGroupAllOf struct for RevisionPageGroupAllOf
type RevisionPageGroupAllOf struct {
	// Deprecated
	Kind string `json:"kind"`
	Type string `json:"type"`
	// Page's slug in its direct parent
	Slug string `json:"slug"`
	// Complete path to access the page in the revision.
	Path  string                                `json:"path"`
	Pages []RevisionPageDocumentAllOfPagesInner `json:"pages"`
}

// NewRevisionPageGroupAllOf instantiates a new RevisionPageGroupAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevisionPageGroupAllOf(kind string, type_ string, slug string, path string, pages []RevisionPageDocumentAllOfPagesInner) *RevisionPageGroupAllOf {
	this := RevisionPageGroupAllOf{}
	this.Kind = kind
	this.Type = type_
	this.Slug = slug
	this.Path = path
	this.Pages = pages
	return &this
}

// NewRevisionPageGroupAllOfWithDefaults instantiates a new RevisionPageGroupAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionPageGroupAllOfWithDefaults() *RevisionPageGroupAllOf {
	this := RevisionPageGroupAllOf{}
	return &this
}

// GetKind returns the Kind field value
// Deprecated
func (o *RevisionPageGroupAllOf) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *RevisionPageGroupAllOf) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
// Deprecated
func (o *RevisionPageGroupAllOf) SetKind(v string) {
	o.Kind = v
}

// GetType returns the Type field value
func (o *RevisionPageGroupAllOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroupAllOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RevisionPageGroupAllOf) SetType(v string) {
	o.Type = v
}

// GetSlug returns the Slug field value
func (o *RevisionPageGroupAllOf) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroupAllOf) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *RevisionPageGroupAllOf) SetSlug(v string) {
	o.Slug = v
}

// GetPath returns the Path field value
func (o *RevisionPageGroupAllOf) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroupAllOf) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *RevisionPageGroupAllOf) SetPath(v string) {
	o.Path = v
}

// GetPages returns the Pages field value
func (o *RevisionPageGroupAllOf) GetPages() []RevisionPageDocumentAllOfPagesInner {
	if o == nil {
		var ret []RevisionPageDocumentAllOfPagesInner
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroupAllOf) GetPagesOk() ([]RevisionPageDocumentAllOfPagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *RevisionPageGroupAllOf) SetPages(v []RevisionPageDocumentAllOfPagesInner) {
	o.Pages = v
}

func (o RevisionPageGroupAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevisionPageGroupAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	toSerialize["type"] = o.Type
	toSerialize["slug"] = o.Slug
	toSerialize["path"] = o.Path
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

type NullableRevisionPageGroupAllOf struct {
	value *RevisionPageGroupAllOf
	isSet bool
}

func (v NullableRevisionPageGroupAllOf) Get() *RevisionPageGroupAllOf {
	return v.value
}

func (v *NullableRevisionPageGroupAllOf) Set(val *RevisionPageGroupAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRevisionPageGroupAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRevisionPageGroupAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevisionPageGroupAllOf(val *RevisionPageGroupAllOf) *NullableRevisionPageGroupAllOf {
	return &NullableRevisionPageGroupAllOf{value: val, isSet: true}
}

func (v NullableRevisionPageGroupAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevisionPageGroupAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
