/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestCreateSpace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestCreateSpace{}

// RequestCreateSpace struct for RequestCreateSpace
type RequestCreateSpace struct {
	Title *string `json:"title,omitempty"`
	// Unicode codepoint or character of the emoji
	Emoji *string `json:"emoji,omitempty"`
	// Private spaces are no longer supported by GitBook.
	// Deprecated
	Private *bool      `json:"private,omitempty"`
	Type    *SpaceType `json:"type,omitempty"`
	// ID of a parent collection
	Parent *string `json:"parent,omitempty"`
}

// NewRequestCreateSpace instantiates a new RequestCreateSpace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestCreateSpace() *RequestCreateSpace {
	this := RequestCreateSpace{}
	return &this
}

// NewRequestCreateSpaceWithDefaults instantiates a new RequestCreateSpace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestCreateSpaceWithDefaults() *RequestCreateSpace {
	this := RequestCreateSpace{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *RequestCreateSpace) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestCreateSpace) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *RequestCreateSpace) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *RequestCreateSpace) SetTitle(v string) {
	o.Title = &v
}

// GetEmoji returns the Emoji field value if set, zero value otherwise.
func (o *RequestCreateSpace) GetEmoji() string {
	if o == nil || IsNil(o.Emoji) {
		var ret string
		return ret
	}
	return *o.Emoji
}

// GetEmojiOk returns a tuple with the Emoji field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestCreateSpace) GetEmojiOk() (*string, bool) {
	if o == nil || IsNil(o.Emoji) {
		return nil, false
	}
	return o.Emoji, true
}

// HasEmoji returns a boolean if a field has been set.
func (o *RequestCreateSpace) HasEmoji() bool {
	if o != nil && !IsNil(o.Emoji) {
		return true
	}

	return false
}

// SetEmoji gets a reference to the given string and assigns it to the Emoji field.
func (o *RequestCreateSpace) SetEmoji(v string) {
	o.Emoji = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
// Deprecated
func (o *RequestCreateSpace) GetPrivate() bool {
	if o == nil || IsNil(o.Private) {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *RequestCreateSpace) GetPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.Private) {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *RequestCreateSpace) HasPrivate() bool {
	if o != nil && !IsNil(o.Private) {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
// Deprecated
func (o *RequestCreateSpace) SetPrivate(v bool) {
	o.Private = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RequestCreateSpace) GetType() SpaceType {
	if o == nil || IsNil(o.Type) {
		var ret SpaceType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestCreateSpace) GetTypeOk() (*SpaceType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RequestCreateSpace) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given SpaceType and assigns it to the Type field.
func (o *RequestCreateSpace) SetType(v SpaceType) {
	o.Type = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *RequestCreateSpace) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestCreateSpace) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *RequestCreateSpace) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *RequestCreateSpace) SetParent(v string) {
	o.Parent = &v
}

func (o RequestCreateSpace) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestCreateSpace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Emoji) {
		toSerialize["emoji"] = o.Emoji
	}
	if !IsNil(o.Private) {
		toSerialize["private"] = o.Private
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	return toSerialize, nil
}

type NullableRequestCreateSpace struct {
	value *RequestCreateSpace
	isSet bool
}

func (v NullableRequestCreateSpace) Get() *RequestCreateSpace {
	return v.value
}

func (v *NullableRequestCreateSpace) Set(val *RequestCreateSpace) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestCreateSpace) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestCreateSpace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestCreateSpace(val *RequestCreateSpace) *NullableRequestCreateSpace {
	return &NullableRequestCreateSpace{value: val, isSet: true}
}

func (v NullableRequestCreateSpace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestCreateSpace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
