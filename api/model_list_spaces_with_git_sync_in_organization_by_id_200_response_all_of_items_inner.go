/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner{}

// ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner struct for ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner
type ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner struct {
	Space   Space         `json:"space"`
	GitSync *GitSyncState `json:"gitSync,omitempty"`
}

// NewListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner instantiates a new ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner(space Space) *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner {
	this := ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner{}
	this.Space = space
	return &this
}

// NewListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInnerWithDefaults instantiates a new ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInnerWithDefaults() *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner {
	this := ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner{}
	return &this
}

// GetSpace returns the Space field value
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) GetSpace() Space {
	if o == nil {
		var ret Space
		return ret
	}

	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value
// and a boolean to check if the value has been set.
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) GetSpaceOk() (*Space, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Space, true
}

// SetSpace sets field value
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) SetSpace(v Space) {
	o.Space = v
}

// GetGitSync returns the GitSync field value if set, zero value otherwise.
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) GetGitSync() GitSyncState {
	if o == nil || IsNil(o.GitSync) {
		var ret GitSyncState
		return ret
	}
	return *o.GitSync
}

// GetGitSyncOk returns a tuple with the GitSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) GetGitSyncOk() (*GitSyncState, bool) {
	if o == nil || IsNil(o.GitSync) {
		return nil, false
	}
	return o.GitSync, true
}

// HasGitSync returns a boolean if a field has been set.
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) HasGitSync() bool {
	if o != nil && !IsNil(o.GitSync) {
		return true
	}

	return false
}

// SetGitSync gets a reference to the given GitSyncState and assigns it to the GitSync field.
func (o *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) SetGitSync(v GitSyncState) {
	o.GitSync = &v
}

func (o ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["space"] = o.Space
	if !IsNil(o.GitSync) {
		toSerialize["gitSync"] = o.GitSync
	}
	return toSerialize, nil
}

type NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner struct {
	value *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner
	isSet bool
}

func (v NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) Get() *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner {
	return v.value
}

func (v *NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) Set(val *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner(val *ListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) *NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner {
	return &NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner{value: val, isSet: true}
}

func (v NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSpacesWithGitSyncInOrganizationById200ResponseAllOfItemsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
