/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the OrganizationDirectorySyncGroupTeamStatusAnyOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationDirectorySyncGroupTeamStatusAnyOf{}

// OrganizationDirectorySyncGroupTeamStatusAnyOf struct for OrganizationDirectorySyncGroupTeamStatusAnyOf
type OrganizationDirectorySyncGroupTeamStatusAnyOf struct {
	Success bool   `json:"success"`
	GroupId string `json:"group_id"`
	TeamId  string `json:"team_id"`
}

// NewOrganizationDirectorySyncGroupTeamStatusAnyOf instantiates a new OrganizationDirectorySyncGroupTeamStatusAnyOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationDirectorySyncGroupTeamStatusAnyOf(success bool, groupId string, teamId string) *OrganizationDirectorySyncGroupTeamStatusAnyOf {
	this := OrganizationDirectorySyncGroupTeamStatusAnyOf{}
	this.Success = success
	this.GroupId = groupId
	this.TeamId = teamId
	return &this
}

// NewOrganizationDirectorySyncGroupTeamStatusAnyOfWithDefaults instantiates a new OrganizationDirectorySyncGroupTeamStatusAnyOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationDirectorySyncGroupTeamStatusAnyOfWithDefaults() *OrganizationDirectorySyncGroupTeamStatusAnyOf {
	this := OrganizationDirectorySyncGroupTeamStatusAnyOf{}
	return &this
}

// GetSuccess returns the Success field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) SetSuccess(v bool) {
	o.Success = v
}

// GetGroupId returns the GroupId field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) SetGroupId(v string) {
	o.GroupId = v
}

// GetTeamId returns the TeamId field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) GetTeamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *OrganizationDirectorySyncGroupTeamStatusAnyOf) SetTeamId(v string) {
	o.TeamId = v
}

func (o OrganizationDirectorySyncGroupTeamStatusAnyOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationDirectorySyncGroupTeamStatusAnyOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["success"] = o.Success
	toSerialize["group_id"] = o.GroupId
	toSerialize["team_id"] = o.TeamId
	return toSerialize, nil
}

type NullableOrganizationDirectorySyncGroupTeamStatusAnyOf struct {
	value *OrganizationDirectorySyncGroupTeamStatusAnyOf
	isSet bool
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) Get() *OrganizationDirectorySyncGroupTeamStatusAnyOf {
	return v.value
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) Set(val *OrganizationDirectorySyncGroupTeamStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationDirectorySyncGroupTeamStatusAnyOf(val *OrganizationDirectorySyncGroupTeamStatusAnyOf) *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf {
	return &NullableOrganizationDirectorySyncGroupTeamStatusAnyOf{value: val, isSet: true}
}

func (v NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationDirectorySyncGroupTeamStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
