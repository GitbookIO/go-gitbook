/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3{}

// IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 struct for IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3
type IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 struct {
	Type        string `json:"type"`
	CallbackUrl string `json:"callback_url"`
	ButtonText  string `json:"button_text"`
}

// NewIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 instantiates a new IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3(type_ string, callbackUrl string, buttonText string) *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 {
	this := IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3{}
	this.Type = type_
	this.CallbackUrl = callbackUrl
	this.ButtonText = buttonText
	return &this
}

// NewIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3WithDefaults instantiates a new IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3WithDefaults() *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 {
	this := IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3{}
	return &this
}

// GetType returns the Type field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) SetType(v string) {
	o.Type = v
}

// GetCallbackUrl returns the CallbackUrl field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetCallbackUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetCallbackUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackUrl, true
}

// SetCallbackUrl sets field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) SetCallbackUrl(v string) {
	o.CallbackUrl = v
}

// GetButtonText returns the ButtonText field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetButtonText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ButtonText
}

// GetButtonTextOk returns a tuple with the ButtonText field value
// and a boolean to check if the value has been set.
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) GetButtonTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ButtonText, true
}

// SetButtonText sets field value
func (o *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) SetButtonText(v string) {
	o.ButtonText = v
}

func (o IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["callback_url"] = o.CallbackUrl
	toSerialize["button_text"] = o.ButtonText
	return toSerialize, nil
}

type NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 struct {
	value *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3
	isSet bool
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) Get() *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 {
	return v.value
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) Set(val *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3(val *IntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3 {
	return &NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3{value: val, isSet: true}
}

func (v NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationConfigurationSchemaPropertiesValueAllOf1OneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
