/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the AnalyticsContentPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsContentPage{}

// AnalyticsContentPage Page entry in the content analytics.
type AnalyticsContentPage struct {
	Page      string                         `json:"page"`
	Title     string                         `json:"title"`
	PageViews float32                        `json:"pageViews"`
	Feedbacks *AnalyticsContentPageFeedbacks `json:"feedbacks,omitempty"`
}

// NewAnalyticsContentPage instantiates a new AnalyticsContentPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsContentPage(page string, title string, pageViews float32) *AnalyticsContentPage {
	this := AnalyticsContentPage{}
	this.Page = page
	this.Title = title
	this.PageViews = pageViews
	return &this
}

// NewAnalyticsContentPageWithDefaults instantiates a new AnalyticsContentPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsContentPageWithDefaults() *AnalyticsContentPage {
	this := AnalyticsContentPage{}
	return &this
}

// GetPage returns the Page field value
func (o *AnalyticsContentPage) GetPage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *AnalyticsContentPage) GetPageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *AnalyticsContentPage) SetPage(v string) {
	o.Page = v
}

// GetTitle returns the Title field value
func (o *AnalyticsContentPage) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AnalyticsContentPage) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AnalyticsContentPage) SetTitle(v string) {
	o.Title = v
}

// GetPageViews returns the PageViews field value
func (o *AnalyticsContentPage) GetPageViews() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PageViews
}

// GetPageViewsOk returns a tuple with the PageViews field value
// and a boolean to check if the value has been set.
func (o *AnalyticsContentPage) GetPageViewsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageViews, true
}

// SetPageViews sets field value
func (o *AnalyticsContentPage) SetPageViews(v float32) {
	o.PageViews = v
}

// GetFeedbacks returns the Feedbacks field value if set, zero value otherwise.
func (o *AnalyticsContentPage) GetFeedbacks() AnalyticsContentPageFeedbacks {
	if o == nil || IsNil(o.Feedbacks) {
		var ret AnalyticsContentPageFeedbacks
		return ret
	}
	return *o.Feedbacks
}

// GetFeedbacksOk returns a tuple with the Feedbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsContentPage) GetFeedbacksOk() (*AnalyticsContentPageFeedbacks, bool) {
	if o == nil || IsNil(o.Feedbacks) {
		return nil, false
	}
	return o.Feedbacks, true
}

// HasFeedbacks returns a boolean if a field has been set.
func (o *AnalyticsContentPage) HasFeedbacks() bool {
	if o != nil && !IsNil(o.Feedbacks) {
		return true
	}

	return false
}

// SetFeedbacks gets a reference to the given AnalyticsContentPageFeedbacks and assigns it to the Feedbacks field.
func (o *AnalyticsContentPage) SetFeedbacks(v AnalyticsContentPageFeedbacks) {
	o.Feedbacks = &v
}

func (o AnalyticsContentPage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsContentPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["page"] = o.Page
	toSerialize["title"] = o.Title
	toSerialize["pageViews"] = o.PageViews
	if !IsNil(o.Feedbacks) {
		toSerialize["feedbacks"] = o.Feedbacks
	}
	return toSerialize, nil
}

type NullableAnalyticsContentPage struct {
	value *AnalyticsContentPage
	isSet bool
}

func (v NullableAnalyticsContentPage) Get() *AnalyticsContentPage {
	return v.value
}

func (v *NullableAnalyticsContentPage) Set(val *AnalyticsContentPage) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsContentPage) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsContentPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsContentPage(val *AnalyticsContentPage) *NullableAnalyticsContentPage {
	return &NullableAnalyticsContentPage{value: val, isSet: true}
}

func (v NullableAnalyticsContentPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsContentPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
