// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SubscriptionChannelOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionChannelOneOf{}

// SubscriptionChannelOneOf struct for SubscriptionChannelOneOf
type SubscriptionChannelOneOf struct {
	Channel       string  `json:"channel"`
	Space         string  `json:"space"`
	ChangeRequest *string `json:"changeRequest,omitempty"`
}

// NewSubscriptionChannelOneOf instantiates a new SubscriptionChannelOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionChannelOneOf(channel string, space string) *SubscriptionChannelOneOf {
	this := SubscriptionChannelOneOf{}
	this.Channel = channel
	this.Space = space
	return &this
}

// NewSubscriptionChannelOneOfWithDefaults instantiates a new SubscriptionChannelOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionChannelOneOfWithDefaults() *SubscriptionChannelOneOf {
	this := SubscriptionChannelOneOf{}
	return &this
}

// GetChannel returns the Channel field value
func (o *SubscriptionChannelOneOf) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *SubscriptionChannelOneOf) SetChannel(v string) {
	o.Channel = v
}

// GetSpace returns the Space field value
func (o *SubscriptionChannelOneOf) GetSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Space
}

// GetSpaceOk returns a tuple with the Space field value
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf) GetSpaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Space, true
}

// SetSpace sets field value
func (o *SubscriptionChannelOneOf) SetSpace(v string) {
	o.Space = v
}

// GetChangeRequest returns the ChangeRequest field value if set, zero value otherwise.
func (o *SubscriptionChannelOneOf) GetChangeRequest() string {
	if o == nil || IsNil(o.ChangeRequest) {
		var ret string
		return ret
	}
	return *o.ChangeRequest
}

// GetChangeRequestOk returns a tuple with the ChangeRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionChannelOneOf) GetChangeRequestOk() (*string, bool) {
	if o == nil || IsNil(o.ChangeRequest) {
		return nil, false
	}
	return o.ChangeRequest, true
}

// HasChangeRequest returns a boolean if a field has been set.
func (o *SubscriptionChannelOneOf) HasChangeRequest() bool {
	if o != nil && !IsNil(o.ChangeRequest) {
		return true
	}

	return false
}

// SetChangeRequest gets a reference to the given string and assigns it to the ChangeRequest field.
func (o *SubscriptionChannelOneOf) SetChangeRequest(v string) {
	o.ChangeRequest = &v
}

func (o SubscriptionChannelOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionChannelOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel"] = o.Channel
	toSerialize["space"] = o.Space
	if !IsNil(o.ChangeRequest) {
		toSerialize["changeRequest"] = o.ChangeRequest
	}
	return toSerialize, nil
}

type NullableSubscriptionChannelOneOf struct {
	value *SubscriptionChannelOneOf
	isSet bool
}

func (v NullableSubscriptionChannelOneOf) Get() *SubscriptionChannelOneOf {
	return v.value
}

func (v *NullableSubscriptionChannelOneOf) Set(val *SubscriptionChannelOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionChannelOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionChannelOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionChannelOneOf(val *SubscriptionChannelOneOf) *NullableSubscriptionChannelOneOf {
	return &NullableSubscriptionChannelOneOf{value: val, isSet: true}
}

func (v NullableSubscriptionChannelOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionChannelOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
