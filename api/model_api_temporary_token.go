// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the APITemporaryToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APITemporaryToken{}

// APITemporaryToken struct for APITemporaryToken
type APITemporaryToken struct {
	// Temporary access token to authenticate with the API
	Token string `json:"token"`
}

// NewAPITemporaryToken instantiates a new APITemporaryToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPITemporaryToken(token string) *APITemporaryToken {
	this := APITemporaryToken{}
	this.Token = token
	return &this
}

// NewAPITemporaryTokenWithDefaults instantiates a new APITemporaryToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPITemporaryTokenWithDefaults() *APITemporaryToken {
	this := APITemporaryToken{}
	return &this
}

// GetToken returns the Token field value
func (o *APITemporaryToken) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *APITemporaryToken) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *APITemporaryToken) SetToken(v string) {
	o.Token = v
}

func (o APITemporaryToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APITemporaryToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullableAPITemporaryToken struct {
	value *APITemporaryToken
	isSet bool
}

func (v NullableAPITemporaryToken) Get() *APITemporaryToken {
	return v.value
}

func (v *NullableAPITemporaryToken) Set(val *APITemporaryToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAPITemporaryToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAPITemporaryToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPITemporaryToken(val *APITemporaryToken) *NullableAPITemporaryToken {
	return &NullableAPITemporaryToken{value: val, isSet: true}
}

func (v NullableAPITemporaryToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPITemporaryToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
