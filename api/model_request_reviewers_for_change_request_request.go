/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RequestReviewersForChangeRequestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestReviewersForChangeRequestRequest{}

// RequestReviewersForChangeRequestRequest struct for RequestReviewersForChangeRequestRequest
type RequestReviewersForChangeRequestRequest struct {
	// An array of user ids that will be requested.
	Users []string `json:"users"`
	// Optionally, update the subject of the change request when requesting reviewers.
	Subject *string `json:"subject,omitempty"`
}

// NewRequestReviewersForChangeRequestRequest instantiates a new RequestReviewersForChangeRequestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestReviewersForChangeRequestRequest(users []string) *RequestReviewersForChangeRequestRequest {
	this := RequestReviewersForChangeRequestRequest{}
	this.Users = users
	return &this
}

// NewRequestReviewersForChangeRequestRequestWithDefaults instantiates a new RequestReviewersForChangeRequestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestReviewersForChangeRequestRequestWithDefaults() *RequestReviewersForChangeRequestRequest {
	this := RequestReviewersForChangeRequestRequest{}
	return &this
}

// GetUsers returns the Users field value
func (o *RequestReviewersForChangeRequestRequest) GetUsers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *RequestReviewersForChangeRequestRequest) GetUsersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *RequestReviewersForChangeRequestRequest) SetUsers(v []string) {
	o.Users = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *RequestReviewersForChangeRequestRequest) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestReviewersForChangeRequestRequest) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *RequestReviewersForChangeRequestRequest) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *RequestReviewersForChangeRequestRequest) SetSubject(v string) {
	o.Subject = &v
}

func (o RequestReviewersForChangeRequestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestReviewersForChangeRequestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["users"] = o.Users
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	return toSerialize, nil
}

type NullableRequestReviewersForChangeRequestRequest struct {
	value *RequestReviewersForChangeRequestRequest
	isSet bool
}

func (v NullableRequestReviewersForChangeRequestRequest) Get() *RequestReviewersForChangeRequestRequest {
	return v.value
}

func (v *NullableRequestReviewersForChangeRequestRequest) Set(val *RequestReviewersForChangeRequestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestReviewersForChangeRequestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestReviewersForChangeRequestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestReviewersForChangeRequestRequest(val *RequestReviewersForChangeRequestRequest) *NullableRequestReviewersForChangeRequestRequest {
	return &NullableRequestReviewersForChangeRequestRequest{value: val, isSet: true}
}

func (v NullableRequestReviewersForChangeRequestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestReviewersForChangeRequestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
