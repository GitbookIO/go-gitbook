/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the AnalyticsContentPages type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsContentPages{}

// AnalyticsContentPages struct for AnalyticsContentPages
type AnalyticsContentPages struct {
	Pages []AnalyticsContentPage `json:"pages"`
}

// NewAnalyticsContentPages instantiates a new AnalyticsContentPages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsContentPages(pages []AnalyticsContentPage) *AnalyticsContentPages {
	this := AnalyticsContentPages{}
	this.Pages = pages
	return &this
}

// NewAnalyticsContentPagesWithDefaults instantiates a new AnalyticsContentPages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsContentPagesWithDefaults() *AnalyticsContentPages {
	this := AnalyticsContentPages{}
	return &this
}

// GetPages returns the Pages field value
func (o *AnalyticsContentPages) GetPages() []AnalyticsContentPage {
	if o == nil {
		var ret []AnalyticsContentPage
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *AnalyticsContentPages) GetPagesOk() ([]AnalyticsContentPage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *AnalyticsContentPages) SetPages(v []AnalyticsContentPage) {
	o.Pages = v
}

func (o AnalyticsContentPages) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsContentPages) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

type NullableAnalyticsContentPages struct {
	value *AnalyticsContentPages
	isSet bool
}

func (v NullableAnalyticsContentPages) Get() *AnalyticsContentPages {
	return v.value
}

func (v *NullableAnalyticsContentPages) Set(val *AnalyticsContentPages) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsContentPages) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsContentPages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsContentPages(val *AnalyticsContentPages) *NullableAnalyticsContentPages {
	return &NullableAnalyticsContentPages{value: val, isSet: true}
}

func (v NullableAnalyticsContentPages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsContentPages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
