/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the AddMemberToOrganizationTeamByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddMemberToOrganizationTeamByIdRequest{}

// AddMemberToOrganizationTeamByIdRequest struct for AddMemberToOrganizationTeamByIdRequest
type AddMemberToOrganizationTeamByIdRequest struct {
	Role *TeamMemberRole `json:"role,omitempty"`
}

// NewAddMemberToOrganizationTeamByIdRequest instantiates a new AddMemberToOrganizationTeamByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddMemberToOrganizationTeamByIdRequest() *AddMemberToOrganizationTeamByIdRequest {
	this := AddMemberToOrganizationTeamByIdRequest{}
	return &this
}

// NewAddMemberToOrganizationTeamByIdRequestWithDefaults instantiates a new AddMemberToOrganizationTeamByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddMemberToOrganizationTeamByIdRequestWithDefaults() *AddMemberToOrganizationTeamByIdRequest {
	this := AddMemberToOrganizationTeamByIdRequest{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AddMemberToOrganizationTeamByIdRequest) GetRole() TeamMemberRole {
	if o == nil || IsNil(o.Role) {
		var ret TeamMemberRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddMemberToOrganizationTeamByIdRequest) GetRoleOk() (*TeamMemberRole, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AddMemberToOrganizationTeamByIdRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given TeamMemberRole and assigns it to the Role field.
func (o *AddMemberToOrganizationTeamByIdRequest) SetRole(v TeamMemberRole) {
	o.Role = &v
}

func (o AddMemberToOrganizationTeamByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddMemberToOrganizationTeamByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableAddMemberToOrganizationTeamByIdRequest struct {
	value *AddMemberToOrganizationTeamByIdRequest
	isSet bool
}

func (v NullableAddMemberToOrganizationTeamByIdRequest) Get() *AddMemberToOrganizationTeamByIdRequest {
	return v.value
}

func (v *NullableAddMemberToOrganizationTeamByIdRequest) Set(val *AddMemberToOrganizationTeamByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddMemberToOrganizationTeamByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddMemberToOrganizationTeamByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddMemberToOrganizationTeamByIdRequest(val *AddMemberToOrganizationTeamByIdRequest) *NullableAddMemberToOrganizationTeamByIdRequest {
	return &NullableAddMemberToOrganizationTeamByIdRequest{value: val, isSet: true}
}

func (v NullableAddMemberToOrganizationTeamByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddMemberToOrganizationTeamByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
