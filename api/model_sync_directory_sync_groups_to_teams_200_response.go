// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SyncDirectorySyncGroupsToTeams200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncDirectorySyncGroupsToTeams200Response{}

// SyncDirectorySyncGroupsToTeams200Response struct for SyncDirectorySyncGroupsToTeams200Response
type SyncDirectorySyncGroupsToTeams200Response struct {
	// The list of synced pairs, mapped to the original pairs given to the sync parameters. Either the group_id and team_id will be defined, or the error will be defined to describe why it failed. Use the success parameter to know if the pair sync was sucessful or not.
	Synced []OrganizationDirectorySyncGroupTeamStatus `json:"synced"`
}

// NewSyncDirectorySyncGroupsToTeams200Response instantiates a new SyncDirectorySyncGroupsToTeams200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncDirectorySyncGroupsToTeams200Response(synced []OrganizationDirectorySyncGroupTeamStatus) *SyncDirectorySyncGroupsToTeams200Response {
	this := SyncDirectorySyncGroupsToTeams200Response{}
	this.Synced = synced
	return &this
}

// NewSyncDirectorySyncGroupsToTeams200ResponseWithDefaults instantiates a new SyncDirectorySyncGroupsToTeams200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncDirectorySyncGroupsToTeams200ResponseWithDefaults() *SyncDirectorySyncGroupsToTeams200Response {
	this := SyncDirectorySyncGroupsToTeams200Response{}
	return &this
}

// GetSynced returns the Synced field value
func (o *SyncDirectorySyncGroupsToTeams200Response) GetSynced() []OrganizationDirectorySyncGroupTeamStatus {
	if o == nil {
		var ret []OrganizationDirectorySyncGroupTeamStatus
		return ret
	}

	return o.Synced
}

// GetSyncedOk returns a tuple with the Synced field value
// and a boolean to check if the value has been set.
func (o *SyncDirectorySyncGroupsToTeams200Response) GetSyncedOk() ([]OrganizationDirectorySyncGroupTeamStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.Synced, true
}

// SetSynced sets field value
func (o *SyncDirectorySyncGroupsToTeams200Response) SetSynced(v []OrganizationDirectorySyncGroupTeamStatus) {
	o.Synced = v
}

func (o SyncDirectorySyncGroupsToTeams200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncDirectorySyncGroupsToTeams200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["synced"] = o.Synced
	return toSerialize, nil
}

type NullableSyncDirectorySyncGroupsToTeams200Response struct {
	value *SyncDirectorySyncGroupsToTeams200Response
	isSet bool
}

func (v NullableSyncDirectorySyncGroupsToTeams200Response) Get() *SyncDirectorySyncGroupsToTeams200Response {
	return v.value
}

func (v *NullableSyncDirectorySyncGroupsToTeams200Response) Set(val *SyncDirectorySyncGroupsToTeams200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncDirectorySyncGroupsToTeams200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncDirectorySyncGroupsToTeams200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncDirectorySyncGroupsToTeams200Response(val *SyncDirectorySyncGroupsToTeams200Response) *NullableSyncDirectorySyncGroupsToTeams200Response {
	return &NullableSyncDirectorySyncGroupsToTeams200Response{value: val, isSet: true}
}

func (v NullableSyncDirectorySyncGroupsToTeams200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncDirectorySyncGroupsToTeams200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
