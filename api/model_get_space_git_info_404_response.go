/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the GetSpaceGitInfo404Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSpaceGitInfo404Response{}

// GetSpaceGitInfo404Response struct for GetSpaceGitInfo404Response
type GetSpaceGitInfo404Response struct {
	Error GetSpaceGitInfo404ResponseError `json:"error"`
}

// NewGetSpaceGitInfo404Response instantiates a new GetSpaceGitInfo404Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSpaceGitInfo404Response(error_ GetSpaceGitInfo404ResponseError) *GetSpaceGitInfo404Response {
	this := GetSpaceGitInfo404Response{}
	this.Error = error_
	return &this
}

// NewGetSpaceGitInfo404ResponseWithDefaults instantiates a new GetSpaceGitInfo404Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSpaceGitInfo404ResponseWithDefaults() *GetSpaceGitInfo404Response {
	this := GetSpaceGitInfo404Response{}
	return &this
}

// GetError returns the Error field value
func (o *GetSpaceGitInfo404Response) GetError() GetSpaceGitInfo404ResponseError {
	if o == nil {
		var ret GetSpaceGitInfo404ResponseError
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *GetSpaceGitInfo404Response) GetErrorOk() (*GetSpaceGitInfo404ResponseError, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *GetSpaceGitInfo404Response) SetError(v GetSpaceGitInfo404ResponseError) {
	o.Error = v
}

func (o GetSpaceGitInfo404Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSpaceGitInfo404Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	return toSerialize, nil
}

type NullableGetSpaceGitInfo404Response struct {
	value *GetSpaceGitInfo404Response
	isSet bool
}

func (v NullableGetSpaceGitInfo404Response) Get() *GetSpaceGitInfo404Response {
	return v.value
}

func (v *NullableGetSpaceGitInfo404Response) Set(val *GetSpaceGitInfo404Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSpaceGitInfo404Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSpaceGitInfo404Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSpaceGitInfo404Response(val *GetSpaceGitInfo404Response) *NullableGetSpaceGitInfo404Response {
	return &NullableGetSpaceGitInfo404Response{value: val, isSet: true}
}

func (v NullableGetSpaceGitInfo404Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSpaceGitInfo404Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
