/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SpaceInstallationSetupEventAllOfPrevious type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpaceInstallationSetupEventAllOfPrevious{}

// SpaceInstallationSetupEventAllOfPrevious The state of the Space installation before it was updated.
type SpaceInstallationSetupEventAllOfPrevious struct {
	Status IntegrationInstallationStatus `json:"status"`
	// The previous configuration of the Space installation.
	Configuration map[string]interface{} `json:"configuration,omitempty"`
}

// NewSpaceInstallationSetupEventAllOfPrevious instantiates a new SpaceInstallationSetupEventAllOfPrevious object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpaceInstallationSetupEventAllOfPrevious(status IntegrationInstallationStatus) *SpaceInstallationSetupEventAllOfPrevious {
	this := SpaceInstallationSetupEventAllOfPrevious{}
	this.Status = status
	return &this
}

// NewSpaceInstallationSetupEventAllOfPreviousWithDefaults instantiates a new SpaceInstallationSetupEventAllOfPrevious object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpaceInstallationSetupEventAllOfPreviousWithDefaults() *SpaceInstallationSetupEventAllOfPrevious {
	this := SpaceInstallationSetupEventAllOfPrevious{}
	return &this
}

// GetStatus returns the Status field value
func (o *SpaceInstallationSetupEventAllOfPrevious) GetStatus() IntegrationInstallationStatus {
	if o == nil {
		var ret IntegrationInstallationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SpaceInstallationSetupEventAllOfPrevious) GetStatusOk() (*IntegrationInstallationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SpaceInstallationSetupEventAllOfPrevious) SetStatus(v IntegrationInstallationStatus) {
	o.Status = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *SpaceInstallationSetupEventAllOfPrevious) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpaceInstallationSetupEventAllOfPrevious) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *SpaceInstallationSetupEventAllOfPrevious) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *SpaceInstallationSetupEventAllOfPrevious) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

func (o SpaceInstallationSetupEventAllOfPrevious) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpaceInstallationSetupEventAllOfPrevious) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	return toSerialize, nil
}

type NullableSpaceInstallationSetupEventAllOfPrevious struct {
	value *SpaceInstallationSetupEventAllOfPrevious
	isSet bool
}

func (v NullableSpaceInstallationSetupEventAllOfPrevious) Get() *SpaceInstallationSetupEventAllOfPrevious {
	return v.value
}

func (v *NullableSpaceInstallationSetupEventAllOfPrevious) Set(val *SpaceInstallationSetupEventAllOfPrevious) {
	v.value = val
	v.isSet = true
}

func (v NullableSpaceInstallationSetupEventAllOfPrevious) IsSet() bool {
	return v.isSet
}

func (v *NullableSpaceInstallationSetupEventAllOfPrevious) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpaceInstallationSetupEventAllOfPrevious(val *SpaceInstallationSetupEventAllOfPrevious) *NullableSpaceInstallationSetupEventAllOfPrevious {
	return &NullableSpaceInstallationSetupEventAllOfPrevious{value: val, isSet: true}
}

func (v NullableSpaceInstallationSetupEventAllOfPrevious) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpaceInstallationSetupEventAllOfPrevious) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
