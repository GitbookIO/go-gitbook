/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the PostCommentReplySchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCommentReplySchema{}

// PostCommentReplySchema struct for PostCommentReplySchema
type PostCommentReplySchema struct {
	Body Document `json:"body"`
}

// NewPostCommentReplySchema instantiates a new PostCommentReplySchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCommentReplySchema(body Document) *PostCommentReplySchema {
	this := PostCommentReplySchema{}
	this.Body = body
	return &this
}

// NewPostCommentReplySchemaWithDefaults instantiates a new PostCommentReplySchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCommentReplySchemaWithDefaults() *PostCommentReplySchema {
	this := PostCommentReplySchema{}
	return &this
}

// GetBody returns the Body field value
func (o *PostCommentReplySchema) GetBody() Document {
	if o == nil {
		var ret Document
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *PostCommentReplySchema) GetBodyOk() (*Document, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *PostCommentReplySchema) SetBody(v Document) {
	o.Body = v
}

func (o PostCommentReplySchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCommentReplySchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.Body
	return toSerialize, nil
}

type NullablePostCommentReplySchema struct {
	value *PostCommentReplySchema
	isSet bool
}

func (v NullablePostCommentReplySchema) Get() *PostCommentReplySchema {
	return v.value
}

func (v *NullablePostCommentReplySchema) Set(val *PostCommentReplySchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCommentReplySchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCommentReplySchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCommentReplySchema(val *PostCommentReplySchema) *NullablePostCommentReplySchema {
	return &NullablePostCommentReplySchema{value: val, isSet: true}
}

func (v NullablePostCommentReplySchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCommentReplySchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
