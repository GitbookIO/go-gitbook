/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the AskQueryWithGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AskQueryWithGet200Response{}

// AskQueryWithGet200Response struct for AskQueryWithGet200Response
type AskQueryWithGet200Response struct {
	Answer *SearchAIAnswer `json:"answer,omitempty"`
}

// NewAskQueryWithGet200Response instantiates a new AskQueryWithGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAskQueryWithGet200Response() *AskQueryWithGet200Response {
	this := AskQueryWithGet200Response{}
	return &this
}

// NewAskQueryWithGet200ResponseWithDefaults instantiates a new AskQueryWithGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAskQueryWithGet200ResponseWithDefaults() *AskQueryWithGet200Response {
	this := AskQueryWithGet200Response{}
	return &this
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *AskQueryWithGet200Response) GetAnswer() SearchAIAnswer {
	if o == nil || IsNil(o.Answer) {
		var ret SearchAIAnswer
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AskQueryWithGet200Response) GetAnswerOk() (*SearchAIAnswer, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *AskQueryWithGet200Response) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given SearchAIAnswer and assigns it to the Answer field.
func (o *AskQueryWithGet200Response) SetAnswer(v SearchAIAnswer) {
	o.Answer = &v
}

func (o AskQueryWithGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AskQueryWithGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	return toSerialize, nil
}

type NullableAskQueryWithGet200Response struct {
	value *AskQueryWithGet200Response
	isSet bool
}

func (v NullableAskQueryWithGet200Response) Get() *AskQueryWithGet200Response {
	return v.value
}

func (v *NullableAskQueryWithGet200Response) Set(val *AskQueryWithGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAskQueryWithGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAskQueryWithGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAskQueryWithGet200Response(val *AskQueryWithGet200Response) *NullableAskQueryWithGet200Response {
	return &NullableAskQueryWithGet200Response{value: val, isSet: true}
}

func (v NullableAskQueryWithGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAskQueryWithGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
