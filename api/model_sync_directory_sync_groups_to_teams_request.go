/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the SyncDirectorySyncGroupsToTeamsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncDirectorySyncGroupsToTeamsRequest{}

// SyncDirectorySyncGroupsToTeamsRequest Parameters for syncing a list of Directory Sync groups to a GitBook team, syncing all members of those groups to the assigned teams. The endpoint can be used for one or many groups to team syncs.
type SyncDirectorySyncGroupsToTeamsRequest struct {
	// A list of groups to teams pairs to sync. The group_id is required and the team_id is optional. If the latter is omitted, a new team will be created from the group's data.
	ToSync []SyncDirectorySyncGroupsToTeamsRequestToSyncInner `json:"to_sync"`
}

// NewSyncDirectorySyncGroupsToTeamsRequest instantiates a new SyncDirectorySyncGroupsToTeamsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncDirectorySyncGroupsToTeamsRequest(toSync []SyncDirectorySyncGroupsToTeamsRequestToSyncInner) *SyncDirectorySyncGroupsToTeamsRequest {
	this := SyncDirectorySyncGroupsToTeamsRequest{}
	this.ToSync = toSync
	return &this
}

// NewSyncDirectorySyncGroupsToTeamsRequestWithDefaults instantiates a new SyncDirectorySyncGroupsToTeamsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncDirectorySyncGroupsToTeamsRequestWithDefaults() *SyncDirectorySyncGroupsToTeamsRequest {
	this := SyncDirectorySyncGroupsToTeamsRequest{}
	return &this
}

// GetToSync returns the ToSync field value
func (o *SyncDirectorySyncGroupsToTeamsRequest) GetToSync() []SyncDirectorySyncGroupsToTeamsRequestToSyncInner {
	if o == nil {
		var ret []SyncDirectorySyncGroupsToTeamsRequestToSyncInner
		return ret
	}

	return o.ToSync
}

// GetToSyncOk returns a tuple with the ToSync field value
// and a boolean to check if the value has been set.
func (o *SyncDirectorySyncGroupsToTeamsRequest) GetToSyncOk() ([]SyncDirectorySyncGroupsToTeamsRequestToSyncInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ToSync, true
}

// SetToSync sets field value
func (o *SyncDirectorySyncGroupsToTeamsRequest) SetToSync(v []SyncDirectorySyncGroupsToTeamsRequestToSyncInner) {
	o.ToSync = v
}

func (o SyncDirectorySyncGroupsToTeamsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncDirectorySyncGroupsToTeamsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["to_sync"] = o.ToSync
	return toSerialize, nil
}

type NullableSyncDirectorySyncGroupsToTeamsRequest struct {
	value *SyncDirectorySyncGroupsToTeamsRequest
	isSet bool
}

func (v NullableSyncDirectorySyncGroupsToTeamsRequest) Get() *SyncDirectorySyncGroupsToTeamsRequest {
	return v.value
}

func (v *NullableSyncDirectorySyncGroupsToTeamsRequest) Set(val *SyncDirectorySyncGroupsToTeamsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncDirectorySyncGroupsToTeamsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncDirectorySyncGroupsToTeamsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncDirectorySyncGroupsToTeamsRequest(val *SyncDirectorySyncGroupsToTeamsRequest) *NullableSyncDirectorySyncGroupsToTeamsRequest {
	return &NullableSyncDirectorySyncGroupsToTeamsRequest{value: val, isSet: true}
}

func (v NullableSyncDirectorySyncGroupsToTeamsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncDirectorySyncGroupsToTeamsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
