/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the IntegrationEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationEvent{}

// IntegrationEvent struct for IntegrationEvent
type IntegrationEvent struct {
	// Unique ID of the event.
	Id string `json:"id"`
	// Unique ID of the integration.
	IntegrationId string `json:"integrationId"`
	// Unique ID of the integration installation.
	InstallationId *string `json:"installationId,omitempty"`
	CreatedAt      string  `json:"createdAt"`
	Payload        Event   `json:"payload"`
	// Status of the event.
	Status string `json:"status"`
}

// NewIntegrationEvent instantiates a new IntegrationEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationEvent(id string, integrationId string, createdAt string, payload Event, status string) *IntegrationEvent {
	this := IntegrationEvent{}
	this.Id = id
	this.IntegrationId = integrationId
	this.CreatedAt = createdAt
	this.Payload = payload
	this.Status = status
	return &this
}

// NewIntegrationEventWithDefaults instantiates a new IntegrationEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationEventWithDefaults() *IntegrationEvent {
	this := IntegrationEvent{}
	return &this
}

// GetId returns the Id field value
func (o *IntegrationEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IntegrationEvent) SetId(v string) {
	o.Id = v
}

// GetIntegrationId returns the IntegrationId field value
func (o *IntegrationEvent) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *IntegrationEvent) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetInstallationId returns the InstallationId field value if set, zero value otherwise.
func (o *IntegrationEvent) GetInstallationId() string {
	if o == nil || IsNil(o.InstallationId) {
		var ret string
		return ret
	}
	return *o.InstallationId
}

// GetInstallationIdOk returns a tuple with the InstallationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetInstallationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationId) {
		return nil, false
	}
	return o.InstallationId, true
}

// HasInstallationId returns a boolean if a field has been set.
func (o *IntegrationEvent) HasInstallationId() bool {
	if o != nil && !IsNil(o.InstallationId) {
		return true
	}

	return false
}

// SetInstallationId gets a reference to the given string and assigns it to the InstallationId field.
func (o *IntegrationEvent) SetInstallationId(v string) {
	o.InstallationId = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *IntegrationEvent) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IntegrationEvent) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetPayload returns the Payload field value
func (o *IntegrationEvent) GetPayload() Event {
	if o == nil {
		var ret Event
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetPayloadOk() (*Event, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *IntegrationEvent) SetPayload(v Event) {
	o.Payload = v
}

// GetStatus returns the Status field value
func (o *IntegrationEvent) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *IntegrationEvent) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *IntegrationEvent) SetStatus(v string) {
	o.Status = v
}

func (o IntegrationEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["integrationId"] = o.IntegrationId
	if !IsNil(o.InstallationId) {
		toSerialize["installationId"] = o.InstallationId
	}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["payload"] = o.Payload
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableIntegrationEvent struct {
	value *IntegrationEvent
	isSet bool
}

func (v NullableIntegrationEvent) Get() *IntegrationEvent {
	return v.value
}

func (v *NullableIntegrationEvent) Set(val *IntegrationEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationEvent(val *IntegrationEvent) *NullableIntegrationEvent {
	return &NullableIntegrationEvent{value: val, isSet: true}
}

func (v NullableIntegrationEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
