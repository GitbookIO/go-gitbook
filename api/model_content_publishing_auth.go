/*
Copyright 2023 GitBook, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the ContentPublishingAuth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentPublishingAuth{}

// ContentPublishingAuth struct for ContentPublishingAuth
type ContentPublishingAuth struct {
	// Type of Object, always equals to \"publishing-auth\"
	Object string `json:"object"`
	// Unique identifier for the content.
	Id string `json:"id"`
	// Private key used to sign JWT tokens.
	PrivateKey string `json:"privateKey"`
	// URL to redirect to when the visitor auth secret is invalid.
	FallbackURL *string `json:"fallbackURL,omitempty"`
}

// NewContentPublishingAuth instantiates a new ContentPublishingAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentPublishingAuth(object string, id string, privateKey string) *ContentPublishingAuth {
	this := ContentPublishingAuth{}
	this.Object = object
	this.Id = id
	this.PrivateKey = privateKey
	return &this
}

// NewContentPublishingAuthWithDefaults instantiates a new ContentPublishingAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentPublishingAuthWithDefaults() *ContentPublishingAuth {
	this := ContentPublishingAuth{}
	return &this
}

// GetObject returns the Object field value
func (o *ContentPublishingAuth) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *ContentPublishingAuth) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *ContentPublishingAuth) SetObject(v string) {
	o.Object = v
}

// GetId returns the Id field value
func (o *ContentPublishingAuth) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContentPublishingAuth) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContentPublishingAuth) SetId(v string) {
	o.Id = v
}

// GetPrivateKey returns the PrivateKey field value
func (o *ContentPublishingAuth) GetPrivateKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value
// and a boolean to check if the value has been set.
func (o *ContentPublishingAuth) GetPrivateKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKey, true
}

// SetPrivateKey sets field value
func (o *ContentPublishingAuth) SetPrivateKey(v string) {
	o.PrivateKey = v
}

// GetFallbackURL returns the FallbackURL field value if set, zero value otherwise.
func (o *ContentPublishingAuth) GetFallbackURL() string {
	if o == nil || IsNil(o.FallbackURL) {
		var ret string
		return ret
	}
	return *o.FallbackURL
}

// GetFallbackURLOk returns a tuple with the FallbackURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentPublishingAuth) GetFallbackURLOk() (*string, bool) {
	if o == nil || IsNil(o.FallbackURL) {
		return nil, false
	}
	return o.FallbackURL, true
}

// HasFallbackURL returns a boolean if a field has been set.
func (o *ContentPublishingAuth) HasFallbackURL() bool {
	if o != nil && !IsNil(o.FallbackURL) {
		return true
	}

	return false
}

// SetFallbackURL gets a reference to the given string and assigns it to the FallbackURL field.
func (o *ContentPublishingAuth) SetFallbackURL(v string) {
	o.FallbackURL = &v
}

func (o ContentPublishingAuth) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentPublishingAuth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["object"] = o.Object
	toSerialize["id"] = o.Id
	toSerialize["privateKey"] = o.PrivateKey
	if !IsNil(o.FallbackURL) {
		toSerialize["fallbackURL"] = o.FallbackURL
	}
	return toSerialize, nil
}

type NullableContentPublishingAuth struct {
	value *ContentPublishingAuth
	isSet bool
}

func (v NullableContentPublishingAuth) Get() *ContentPublishingAuth {
	return v.value
}

func (v *NullableContentPublishingAuth) Set(val *ContentPublishingAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableContentPublishingAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableContentPublishingAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentPublishingAuth(val *ContentPublishingAuth) *NullableContentPublishingAuth {
	return &NullableContentPublishingAuth{value: val, isSet: true}
}

func (v NullableContentPublishingAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentPublishingAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
