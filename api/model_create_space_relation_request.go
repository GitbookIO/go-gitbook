/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the CreateSpaceRelationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSpaceRelationRequest{}

// CreateSpaceRelationRequest struct for CreateSpaceRelationRequest
type CreateSpaceRelationRequest struct {
	// ID of the other space
	Target string            `json:"target"`
	Type   SpaceRelationType `json:"type"`
}

// NewCreateSpaceRelationRequest instantiates a new CreateSpaceRelationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSpaceRelationRequest(target string, type_ SpaceRelationType) *CreateSpaceRelationRequest {
	this := CreateSpaceRelationRequest{}
	this.Target = target
	this.Type = type_
	return &this
}

// NewCreateSpaceRelationRequestWithDefaults instantiates a new CreateSpaceRelationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSpaceRelationRequestWithDefaults() *CreateSpaceRelationRequest {
	this := CreateSpaceRelationRequest{}
	return &this
}

// GetTarget returns the Target field value
func (o *CreateSpaceRelationRequest) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *CreateSpaceRelationRequest) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *CreateSpaceRelationRequest) SetTarget(v string) {
	o.Target = v
}

// GetType returns the Type field value
func (o *CreateSpaceRelationRequest) GetType() SpaceRelationType {
	if o == nil {
		var ret SpaceRelationType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateSpaceRelationRequest) GetTypeOk() (*SpaceRelationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateSpaceRelationRequest) SetType(v SpaceRelationType) {
	o.Type = v
}

func (o CreateSpaceRelationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSpaceRelationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["target"] = o.Target
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableCreateSpaceRelationRequest struct {
	value *CreateSpaceRelationRequest
	isSet bool
}

func (v NullableCreateSpaceRelationRequest) Get() *CreateSpaceRelationRequest {
	return v.value
}

func (v *NullableCreateSpaceRelationRequest) Set(val *CreateSpaceRelationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSpaceRelationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSpaceRelationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSpaceRelationRequest(val *CreateSpaceRelationRequest) *NullableCreateSpaceRelationRequest {
	return &NullableCreateSpaceRelationRequest{value: val, isSet: true}
}

func (v NullableCreateSpaceRelationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSpaceRelationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
