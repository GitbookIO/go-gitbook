// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the RevisionPageGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RevisionPageGroup{}

// RevisionPageGroup struct for RevisionPageGroup
type RevisionPageGroup struct {
	// Unique identifier for the page in the revision
	Id string `json:"id"`
	// Title of the page
	Title string `json:"title"`
	// Deprecated
	Kind string `json:"kind"`
	Type string `json:"type"`
	// Page's slug in its direct parent
	Slug string `json:"slug"`
	// Complete path to access the page in the revision.
	Path  string                                `json:"path"`
	Pages []RevisionPageDocumentAllOfPagesInner `json:"pages"`
}

// NewRevisionPageGroup instantiates a new RevisionPageGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRevisionPageGroup(id string, title string, kind string, type_ string, slug string, path string, pages []RevisionPageDocumentAllOfPagesInner) *RevisionPageGroup {
	this := RevisionPageGroup{}
	this.Id = id
	this.Title = title
	this.Kind = kind
	this.Type = type_
	this.Slug = slug
	this.Path = path
	this.Pages = pages
	return &this
}

// NewRevisionPageGroupWithDefaults instantiates a new RevisionPageGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRevisionPageGroupWithDefaults() *RevisionPageGroup {
	this := RevisionPageGroup{}
	return &this
}

// GetId returns the Id field value
func (o *RevisionPageGroup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RevisionPageGroup) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *RevisionPageGroup) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RevisionPageGroup) SetTitle(v string) {
	o.Title = v
}

// GetKind returns the Kind field value
// Deprecated
func (o *RevisionPageGroup) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *RevisionPageGroup) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
// Deprecated
func (o *RevisionPageGroup) SetKind(v string) {
	o.Kind = v
}

// GetType returns the Type field value
func (o *RevisionPageGroup) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RevisionPageGroup) SetType(v string) {
	o.Type = v
}

// GetSlug returns the Slug field value
func (o *RevisionPageGroup) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *RevisionPageGroup) SetSlug(v string) {
	o.Slug = v
}

// GetPath returns the Path field value
func (o *RevisionPageGroup) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *RevisionPageGroup) SetPath(v string) {
	o.Path = v
}

// GetPages returns the Pages field value
func (o *RevisionPageGroup) GetPages() []RevisionPageDocumentAllOfPagesInner {
	if o == nil {
		var ret []RevisionPageDocumentAllOfPagesInner
		return ret
	}

	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value
// and a boolean to check if the value has been set.
func (o *RevisionPageGroup) GetPagesOk() ([]RevisionPageDocumentAllOfPagesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pages, true
}

// SetPages sets field value
func (o *RevisionPageGroup) SetPages(v []RevisionPageDocumentAllOfPagesInner) {
	o.Pages = v
}

func (o RevisionPageGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RevisionPageGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["kind"] = o.Kind
	toSerialize["type"] = o.Type
	toSerialize["slug"] = o.Slug
	toSerialize["path"] = o.Path
	toSerialize["pages"] = o.Pages
	return toSerialize, nil
}

type NullableRevisionPageGroup struct {
	value *RevisionPageGroup
	isSet bool
}

func (v NullableRevisionPageGroup) Get() *RevisionPageGroup {
	return v.value
}

func (v *NullableRevisionPageGroup) Set(val *RevisionPageGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableRevisionPageGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableRevisionPageGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRevisionPageGroup(val *RevisionPageGroup) *NullableRevisionPageGroup {
	return &NullableRevisionPageGroup{value: val, isSet: true}
}

func (v NullableRevisionPageGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRevisionPageGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
