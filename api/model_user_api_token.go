// Copyright 2023 GitBook, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the UserAPIToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserAPIToken{}

// UserAPIToken The API token details, excluding the token itself.
type UserAPIToken struct {
	// The API token ID.
	Id string `json:"id"`
	// The API token name.
	Label     string `json:"label"`
	CreatedAt string `json:"createdAt"`
}

// NewUserAPIToken instantiates a new UserAPIToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserAPIToken(id string, label string, createdAt string) *UserAPIToken {
	this := UserAPIToken{}
	this.Id = id
	this.Label = label
	this.CreatedAt = createdAt
	return &this
}

// NewUserAPITokenWithDefaults instantiates a new UserAPIToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserAPITokenWithDefaults() *UserAPIToken {
	this := UserAPIToken{}
	return &this
}

// GetId returns the Id field value
func (o *UserAPIToken) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UserAPIToken) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UserAPIToken) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *UserAPIToken) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *UserAPIToken) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *UserAPIToken) SetLabel(v string) {
	o.Label = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserAPIToken) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserAPIToken) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserAPIToken) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o UserAPIToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserAPIToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["createdAt"] = o.CreatedAt
	return toSerialize, nil
}

type NullableUserAPIToken struct {
	value *UserAPIToken
	isSet bool
}

func (v NullableUserAPIToken) Get() *UserAPIToken {
	return v.value
}

func (v *NullableUserAPIToken) Set(val *UserAPIToken) {
	v.value = val
	v.isSet = true
}

func (v NullableUserAPIToken) IsSet() bool {
	return v.isSet
}

func (v *NullableUserAPIToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserAPIToken(val *UserAPIToken) *NullableUserAPIToken {
	return &NullableUserAPIToken{value: val, isSet: true}
}

func (v NullableUserAPIToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserAPIToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
