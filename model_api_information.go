/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the ApiInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiInformation{}

// ApiInformation struct for ApiInformation
type ApiInformation struct {
	// Current release of GitBook
	Version string `json:"version"`
	// Date of the latest release in ISO format
	Build string `json:"build"`
}

// NewApiInformation instantiates a new ApiInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInformation(version string, build string) *ApiInformation {
	this := ApiInformation{}
	this.Version = version
	this.Build = build
	return &this
}

// NewApiInformationWithDefaults instantiates a new ApiInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInformationWithDefaults() *ApiInformation {
	this := ApiInformation{}
	return &this
}

// GetVersion returns the Version field value
func (o *ApiInformation) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ApiInformation) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ApiInformation) SetVersion(v string) {
	o.Version = v
}

// GetBuild returns the Build field value
func (o *ApiInformation) GetBuild() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Build
}

// GetBuildOk returns a tuple with the Build field value
// and a boolean to check if the value has been set.
func (o *ApiInformation) GetBuildOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Build, true
}

// SetBuild sets field value
func (o *ApiInformation) SetBuild(v string) {
	o.Build = v
}

func (o ApiInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["build"] = o.Build
	return toSerialize, nil
}

type NullableApiInformation struct {
	value *ApiInformation
	isSet bool
}

func (v NullableApiInformation) Get() *ApiInformation {
	return v.value
}

func (v *NullableApiInformation) Set(val *ApiInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInformation(val *ApiInformation) *NullableApiInformation {
	return &NullableApiInformation{value: val, isSet: true}
}

func (v NullableApiInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
