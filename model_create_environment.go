/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the CreateEnvironment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEnvironment{}

// CreateEnvironment struct for CreateEnvironment
type CreateEnvironment struct {
	Name  string `json:"name"`
	Title string `json:"title"`
}

// NewCreateEnvironment instantiates a new CreateEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEnvironment(name string, title string) *CreateEnvironment {
	this := CreateEnvironment{}
	this.Name = name
	this.Title = title
	return &this
}

// NewCreateEnvironmentWithDefaults instantiates a new CreateEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEnvironmentWithDefaults() *CreateEnvironment {
	this := CreateEnvironment{}
	return &this
}

// GetName returns the Name field value
func (o *CreateEnvironment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateEnvironment) SetName(v string) {
	o.Name = v
}

// GetTitle returns the Title field value
func (o *CreateEnvironment) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateEnvironment) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateEnvironment) SetTitle(v string) {
	o.Title = v
}

func (o CreateEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEnvironment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

type NullableCreateEnvironment struct {
	value *CreateEnvironment
	isSet bool
}

func (v NullableCreateEnvironment) Get() *CreateEnvironment {
	return v.value
}

func (v *NullableCreateEnvironment) Set(val *CreateEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEnvironment(val *CreateEnvironment) *NullableCreateEnvironment {
	return &NullableCreateEnvironment{value: val, isSet: true}
}

func (v NullableCreateEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
