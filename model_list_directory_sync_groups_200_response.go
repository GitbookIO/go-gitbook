/*
GitBook API

The GitBook API

API version: 0.0.1-beta
Contact: support@gitbook.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gitbook

import (
	"encoding/json"
)

// checks if the ListDirectorySyncGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDirectorySyncGroups200Response{}

// ListDirectorySyncGroups200Response All the groups.
type ListDirectorySyncGroups200Response struct {
	Groups []OrganizationDirectorySyncGroup `json:"groups"`
}

// NewListDirectorySyncGroups200Response instantiates a new ListDirectorySyncGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDirectorySyncGroups200Response(groups []OrganizationDirectorySyncGroup) *ListDirectorySyncGroups200Response {
	this := ListDirectorySyncGroups200Response{}
	this.Groups = groups
	return &this
}

// NewListDirectorySyncGroups200ResponseWithDefaults instantiates a new ListDirectorySyncGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDirectorySyncGroups200ResponseWithDefaults() *ListDirectorySyncGroups200Response {
	this := ListDirectorySyncGroups200Response{}
	return &this
}

// GetGroups returns the Groups field value
func (o *ListDirectorySyncGroups200Response) GetGroups() []OrganizationDirectorySyncGroup {
	if o == nil {
		var ret []OrganizationDirectorySyncGroup
		return ret
	}

	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value
// and a boolean to check if the value has been set.
func (o *ListDirectorySyncGroups200Response) GetGroupsOk() ([]OrganizationDirectorySyncGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.Groups, true
}

// SetGroups sets field value
func (o *ListDirectorySyncGroups200Response) SetGroups(v []OrganizationDirectorySyncGroup) {
	o.Groups = v
}

func (o ListDirectorySyncGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDirectorySyncGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groups"] = o.Groups
	return toSerialize, nil
}

type NullableListDirectorySyncGroups200Response struct {
	value *ListDirectorySyncGroups200Response
	isSet bool
}

func (v NullableListDirectorySyncGroups200Response) Get() *ListDirectorySyncGroups200Response {
	return v.value
}

func (v *NullableListDirectorySyncGroups200Response) Set(val *ListDirectorySyncGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListDirectorySyncGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListDirectorySyncGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDirectorySyncGroups200Response(val *ListDirectorySyncGroups200Response) *NullableListDirectorySyncGroups200Response {
	return &NullableListDirectorySyncGroups200Response{value: val, isSet: true}
}

func (v NullableListDirectorySyncGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDirectorySyncGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
